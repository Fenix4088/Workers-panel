{"version":3,"sources":["components/common/Button/Button.tsx","App/routes/routes.ts","api/api.ts","pages/WorkersTable/workersTableReducer.ts","helpers/helpers.ts","App/appReducer.ts","pages/Login/loginReducer.ts","styles/GlobalStyles.ts","components/common/SvgIcons/WorkersIcon.tsx","components/Header/Header.tsx","components/common/InputText/InputText.tsx","components/common/RadioButtons/RadioButtons.tsx","components/Modal/ModalWindow.tsx","components/common/Loader/Loader.tsx","components/common/Loader/Loaders.tsx","components/TableMainRow/TableMainRow.tsx","components/Search/Search.tsx","components/common/Select/Select.tsx","components/Paginator/Paginator.tsx","components/TableControlPanel/TableControlPanel.tsx","pages/WorkersTable/WorkersTable.tsx","components/common/Checkbox/Checkbox.tsx","pages/Login/Login.tsx","pages/Registration/registrationReducer.ts","pages/Registration/Registration.tsx","pages/NotFound/NotFound.tsx","components/Main/Main.tsx","App/App.tsx","reportWebVitals.ts","App/store/store.ts","styles/theme.ts","index.tsx"],"names":["Button","restProps","StyledButton","styled","button","theme","color","primary","main","white","font","family","default","size","shadow","light","routes","instance","axios","create","baseURL","withCredentials","authApi","post","data","delete","workersApi","get","res","workers","id","put","_id","workersWatcher","getWorkersWorker","deleteWorkerWorker","addWorkerWorker","updateWorkerWorker","sagasWorkersActions","reducerActions","initialState","isTableLoading","tableLoading","status","type","workerLoading","workerId","takeEvery","call","payload","toast","message","getWorkersSA","action","resp","workerData","v1","response","Toast","success","fail","info","Error","calcPagination","pages","current","l","last","length","left","right","range","rangeWithDots","push","i","appWatcher","authWorker","sagasAppActions","isAuth","isAppLoading","authUserData","email","modalStatus","modalType","isVisible","optionalData","paginatorData","totalPageCount","usersPerPage","currentUsersIndexes","setCurrentUsersIndexes","indexes","appLoading","changeModalStatus","setUserData","userData","setPageData","pagesList","setIsLoggedIn","loginWatcher","loginWorker","logoutWorker","sagasLoginActions","isLoggedIn","GlobalStyles","createGlobalStyle","source","MB","div","props","margin","AppContainer","mediaQuery","tablet","WorkersPanelIcon","finalIcon","icon","width","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","IconWrapper","Header","dispatch","useDispatch","useSelector","state","login","app","NavBarWrap","NavBar","UserInfoWrap","onClick","to","secondary","nav","InputText","onChange","onChangeText","onKeyPress","onEnter","error","InputTextWrapper","StyledInput","e","currentTarget","value","key","StyledError","input","s1","RadioButtons","name","options","onChangeOption","mappedOptions","map","o","RadioContainer","Checkmark","label","grey","ModalWindow","initialWorkerData","updatingWorker","fullName","contacts","gender","salary","position","isLoading","formik","useFormik","initialValues","onSubmit","values","updateWorkerSA","ModalForm","handleSubmit","data-form","IconWrap","ModalTitle","handleChange","onBlur","handleBlur","placeholder","RadioWrap","aria-labelledby","form","h3","Loader","useLoading","loading","indicator","containerProps","indicatorEl","LoaderWrapper","section","TableLoader","TableDataLoader","TableItemLoader","tr","TableMainRow","date","index","TableBodyRow","TableData","updated","Date","toLocaleDateString","year","month","day","TableDataUsePanel","td","Search","useState","searchVal","setSearchVal","SearchWrap","SearchInputWrap","SearchIconWrap","onInput","trim","matchedWorkers","filter","w","toLowerCase","indexOf","Select","onChangeCallback","option","Fragment","checked","Option","htmlFor","undefined","SelectWrapper","tabIndex","black","Paginator","onPagButtonClick","setCurrentPage","currentPage","lastIndex","PaginatorWrap","p","style","backgroundColor","cursor","TableControlPanel","selectedVal","setSelectedVal","TablePanelWrap","selectValue","targetArrLength","pagesCount","Math","ceil","Array","from","v","k","getTotalPagesList","WorkersTable","useEffect","fI","lI","currentWorkers","slice","MainTable","TableTitle","TableWrapper","Table","TableHeaderRow","table","h1","Checkbox","children","StyledLabel","Login","password","rememberMe","validate","errors","test","inputValidation","fieldType","touched","FormStyle","FormTitle","registrationWatcher","registrationWorker","sagasRegistrationActions","isRegistered","Registration","registration","confirmPassword","StyledForm","NotFound","Main","exact","path","render","BigLoaderWrap","Overlay","App","isModalOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootWatcher","rootReducer","combineReducers","LOGIN","SET_WORKERS","DELETE_WORKER","ADD_WORKER","UPDATE_WORKER","SET_FILTERED_WORKERS","TABLE_LOADING","WORKER_LOADING","AUTH","MODAL_STATUS","APP_LOADING","SET_USER_DATA","SET_TOTAL_PAGE_COUNT","SET_CURRENT_USER_INDEXES","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","all","run","primaryColor","secondaryColor","variable","headerHeight","lighten","dark","darken","100","200","300","400","500","600","700","800","900","montserrat","s3","s2","b1","b2","b3","b4","b5","0","1","2","3","4","effect","glow","mobileS","mobileM","mobileL","laptop","laptopL","fourK","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03e3624d.chunk.js","sourcesContent":["import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\r\nimport { ThemeType } from \"../../../styles/theme\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype PropsType = DefaultButtonPropsType;\r\n\r\nexport const Button: React.FC<PropsType> = ({ ...restProps }) => {\r\n    return <StyledButton {...restProps} />;\r\n};\r\n\r\n// Styles\r\nconst StyledButton = styled.button<StyledComponentProps<any, ThemeType, any, any>>`\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.color.primary.main};\r\n  color: ${({ theme }) => theme.color.white};\r\n  padding: 0.5rem 1rem;\r\n\r\n  font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n  font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n  box-shadow: ${({ theme }) => theme.shadow[3]};\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.primary.light};\r\n  }\r\n`;\r\n","type RoutesT = {\r\n    main: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n}\r\n\r\nexport const routes: RoutesT = {\r\n    main: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n}","import axios, { AxiosResponse } from \"axios\";\nimport { NewWorkerT, WorkersT } from \"../pages/WorkersTable/workersTableReducer\";\n\nconst instance = axios.create({\n    baseURL: \"https://workers-panel.herokuapp.com/\",\n    withCredentials: true\n});\n\nexport type RegistrationDataT = {\n    email: string;\n    password: string;\n};\n\nexport type LoginDataT = RegistrationDataT & {\n    rememberMe: boolean;\n};\n\n\n\nexport type LoginRespT = {\n    data: {\n        email: string;\n        id: string;\n        rememberMe: boolean;\n    };\n};\n\nexport type AuthRespT = {\n    data: {\n        email: string;\n        _id: string;\n    };\n};\n\n\n\nexport type GetWorkersRespT = {\n    count: number;\n    workers: Array<WorkersT>;\n};\n\nexport type MessageRespT = {\n    resultCode: number;\n    message: string;\n};\n\n\nexport const authApi = {\n    async me() {\n        return await instance.post<AxiosResponse<AuthRespT>>(\"auth/me\");\n    },\n\n    async registration(data: RegistrationDataT) {\n        return await instance.post<AxiosResponse<MessageRespT>>(\"auth/register\", data);\n    },\n\n    async login(data: LoginDataT) {\n        return await instance.post<AxiosResponse<LoginRespT>>(\"auth/login\", data);\n    },\n\n    async logout() {\n        return await instance.delete<AxiosResponse<MessageRespT>>(\"auth/logout\");\n    }\n};\n\nexport const workersApi = {\n    async getWorkers() {\n        const res = await instance.get<AxiosResponse<GetWorkersRespT>>(\"workers\");\n        return res.data.data.workers;\n    },\n    async deleteWorker(id: string) {\n        return await instance.delete<AxiosResponse<MessageRespT>>(`workers/${id}`);\n    },\n    async addWorker(data: NewWorkerT) {\n        return await instance.post<AxiosResponse<MessageRespT>>(`workers`, data);\n    },\n\n    async updateWorker(data: WorkersT) {\n        return await instance.put<AxiosResponse<MessageRespT>>(`workers/${data._id}`, data);\n    }\n};","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { MessageRespT, workersApi } from \"../../api/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { v1 } from \"uuid\";\r\nimport { toast } from \"../../helpers/helpers\";\r\n\r\n// * Types\r\n\r\nexport type NewWorkerT = {\r\n    fullName: string;\r\n    gender: \"male\" | \"female\";\r\n    contacts: string;\r\n    salary: string;\r\n    position: string;\r\n};\r\n\r\nexport type WorkersT = NewWorkerT & {\r\n    _id?: string;\r\n    updated?: string;\r\n    isLoading: boolean;\r\n};\r\n\r\ntype ActionsT =\r\n    | ReturnType<typeof setWorkers>\r\n    | ReturnType<typeof deleteWorker>\r\n    | ReturnType<typeof addWorker>\r\n    | ReturnType<typeof updateWorker>\r\n    | ReturnType<typeof setFilteredWorkers>\r\n    | ReturnType<typeof tableLoading>\r\n    | ReturnType<typeof workerLoading>;\r\n\r\nexport type InitialStateT = {\r\n    workers: Array<WorkersT>;\r\n    isTableLoading: boolean;\r\n};\r\n\r\n// * Actions\r\nconst sagasWorkersActions = {\r\n    GET_WORKERS: \"SAGA/WORKERS/GET_WORKERS\" as const,\r\n    DELETE_WORKER: \"SAGA/WORKERS/DELETE_WORKER\" as const,\r\n    ADD_WORKER: \"SAGA/WORKERS/ADD_WORKER\" as const,\r\n    UPDATE_WORKER: \"SAGA/WORKERS/UPDATE_WORKER\" as const\r\n};\r\nconst reducerActions = {\r\n    SET_WORKERS: \"workersTableReducer/SET_WORKERS\" as const,\r\n    DELETE_WORKER: \"workersTableReducer/DELETE_WORKER\" as const,\r\n    ADD_WORKER: \"workersTableReducer/ADD_WORKER\" as const,\r\n    UPDATE_WORKER: \"workersTableReducer/UPDATE_WORKER\" as const,\r\n    SET_FILTERED_WORKERS: \"workersTableReducer/SET_FILTERED_WORKERS\" as const,\r\n    TABLE_LOADING: \"workersTableReducer/TABLE_LOADING\" as const,\r\n    WORKER_LOADING: \"workersTableReducer/WORKER_LOADING\" as const\r\n};\r\n\r\n// * reducer\r\nconst initialState: InitialStateT = {\r\n    workers: [] as Array<WorkersT>,\r\n    isTableLoading: false\r\n};\r\n\r\nexport const workersTableReducer = (state = initialState, action: ActionsT): InitialStateT => {\r\n    const {\r\n        SET_WORKERS,\r\n        DELETE_WORKER,\r\n        ADD_WORKER,\r\n        UPDATE_WORKER,\r\n        SET_FILTERED_WORKERS,\r\n        TABLE_LOADING,\r\n        WORKER_LOADING\r\n    } = reducerActions;\r\n    switch (action.type) {\r\n        case SET_WORKERS: {\r\n            return {\r\n                ...state,\r\n                workers: action.payload.map((w) => ({ ...w, isLoading: false }))\r\n            };\r\n        }\r\n        case SET_FILTERED_WORKERS: {\r\n            return {\r\n                ...state,\r\n                workers: [...action.workerData]\r\n            };\r\n        }\r\n        case ADD_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: [...state.workers, { ...action.workerData, isLoading: false, _id: action._id }]\r\n            };\r\n        }\r\n        case DELETE_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.filter((w) => w._id !== action.id)\r\n            };\r\n        }\r\n\r\n        case UPDATE_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.map((w) =>\r\n                    w._id === action.workerData._id ? { ...w, ...action.workerData } : w\r\n                )\r\n            };\r\n        }\r\n        case TABLE_LOADING: {\r\n            return {\r\n                ...state,\r\n                isTableLoading: action.status\r\n            };\r\n        }\r\n        case WORKER_LOADING: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.map((w) => (w._id === action.workerId ? { ...w, isLoading: action.status } : w))\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// * AC\r\n\r\nexport const tableLoading = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.TABLE_LOADING,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const workerLoading = (status: boolean, workerId: string) => {\r\n    return {\r\n        type: reducerActions.WORKER_LOADING,\r\n        status,\r\n        workerId\r\n    } as const;\r\n};\r\n\r\nexport const setWorkers = (payload: Array<WorkersT>) => {\r\n    return {\r\n        type: reducerActions.SET_WORKERS,\r\n        payload\r\n    } as const;\r\n};\r\n\r\nexport const addWorker = (workerData: NewWorkerT) => {\r\n    return {\r\n        type: reducerActions.ADD_WORKER,\r\n        _id: v1(),\r\n        workerData\r\n    } as const;\r\n};\r\n\r\nexport const deleteWorker = (id: string) => {\r\n    return {\r\n        type: reducerActions.DELETE_WORKER,\r\n        id\r\n    } as const;\r\n};\r\n\r\nexport const updateWorker = (workerData: WorkersT) => {\r\n    return {\r\n        type: reducerActions.UPDATE_WORKER,\r\n        workerData\r\n    } as const;\r\n};\r\n\r\nexport const setFilteredWorkers = (workerData: Array<WorkersT>) => {\r\n    return {\r\n        type: reducerActions.SET_FILTERED_WORKERS,\r\n        workerData\r\n    } as const;\r\n};\r\n\r\n// * Sagas\r\nexport function* workersWatcher() {\r\n    yield takeEvery(sagasWorkersActions.GET_WORKERS, getWorkersWorker);\r\n    yield takeEvery(sagasWorkersActions.DELETE_WORKER, deleteWorkerWorker);\r\n    yield takeEvery(sagasWorkersActions.ADD_WORKER, addWorkerWorker);\r\n    yield takeEvery(sagasWorkersActions.UPDATE_WORKER, updateWorkerWorker);\r\n}\r\n\r\nfunction* getWorkersWorker() {\r\n    yield put(tableLoading(true));\r\n    try {\r\n        const workers: Array<WorkersT> = yield call(workersApi.getWorkers);\r\n        yield put(setWorkers(workers));\r\n        yield put(tableLoading(false));\r\n    } catch (err) {\r\n        yield call(toast, \"fail\", err.message);\r\n        yield put(tableLoading(false));\r\n    }\r\n}\r\n\r\nexport const getWorkersSA = () => {\r\n    return {\r\n        type: sagasWorkersActions.GET_WORKERS\r\n    } as const;\r\n};\r\n\r\nfunction* deleteWorkerWorker(action: ReturnType<typeof deleteWorkersSA>) {\r\n    try {\r\n        yield put(workerLoading(true, action.id));\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.deleteWorker, action.id);\r\n        yield put(deleteWorker(action.id));\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        yield put(workerLoading(false, action.id));\r\n        yield call(toast, \"fail\", err.message);\r\n    }\r\n}\r\n\r\nexport const deleteWorkersSA = (id: string) => {\r\n    return {\r\n        type: sagasWorkersActions.DELETE_WORKER,\r\n        id\r\n    } as const;\r\n};\r\n\r\nfunction* addWorkerWorker(action: ReturnType<typeof addWorkersSA>) {\r\n    try {\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.addWorker, action.payload);\r\n        yield put(addWorker(action.payload));\r\n        yield put(getWorkersSA());\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        yield call(toast, \"fail\", err.response.data.message);\r\n    }\r\n}\r\n\r\nexport const addWorkersSA = (payload: NewWorkerT) => {\r\n    return {\r\n        type: sagasWorkersActions.ADD_WORKER,\r\n        payload\r\n    } as const;\r\n};\r\n\r\nfunction* updateWorkerWorker(action: ReturnType<typeof updateWorkerSA>) {\r\n    try {\r\n        if(action.payload._id) yield put(workerLoading(true, action.payload._id));\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.updateWorker, action.payload);\r\n        yield put(updateWorker(action.payload));\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        if(action.payload._id) yield put(workerLoading(false, action.payload._id));\r\n        yield call(toast, \"fail\", err.message);\r\n    }\r\n}\r\n\r\nexport const updateWorkerSA = (payload: WorkersT) => {\r\n    return {\r\n        type: sagasWorkersActions.UPDATE_WORKER,\r\n        payload\r\n    } as const;\r\n};\r\n","import Toast from \"light-toast\";\r\nimport {getWorkersSA} from \"../pages/WorkersTable/workersTableReducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const formatDate = (date: string) => {\r\n    return new Date(date).toLocaleDateString(\"ru\", {\r\n        year: \"2-digit\",\r\n        month: \"2-digit\",\r\n        day: \"numeric\"\r\n    });\r\n};\r\n\r\nexport const toast = (status: \"success\" | \"fail\" | \"loading\" | \"info\", message: string) => {\r\n    switch (status) {\r\n        case \"success\":\r\n            Toast.success(message, 2000);\r\n            break;\r\n        case \"fail\":\r\n            Toast.fail(message, 2000);\r\n            break;\r\n        case \"info\":\r\n            Toast.info(message, 2000);\r\n            break;\r\n        default:\r\n            throw new Error(\"Invoked without params\");\r\n    }\r\n};\r\n\r\n\r\nexport const getTotalPagesList = (selectValue: string, targetArrLength: number, dispatch: Dispatch): Array<number> => {\r\n    let pages: Array<number>;\r\n    if(selectValue !== \"all\") {\r\n        const pagesCount: number = Math.ceil(targetArrLength / +selectValue);\r\n        pages = Array.from({length: pagesCount}, (v, k) => k+1);\r\n    } else {\r\n        pages = [1];\r\n        dispatch(getWorkersSA())\r\n    }\r\n\r\n    return pages;\r\n\r\n}\r\n\r\n\r\nexport const calcPagination = (pages: Array<number>, current: number) => {\r\n    let last = pages.length,\r\n        delta = 2,\r\n        left = current - delta,\r\n        right = current + delta,\r\n        range = [],\r\n        rangeWithDots = [],\r\n        l;\r\n\r\n    range.push(1);\r\n    for (let i = current - delta; i <= current + delta; i++) {\r\n        if (i >= left && i < right && i < last && i > 1) {\r\n            range.push(i);\r\n        }\r\n    }\r\n    range.push(last);\r\n    for (let i of range) {\r\n        if (l) {\r\n            if (i - l === 2) {\r\n                rangeWithDots.push(l + 1);\r\n            } else if (i - l !== 1) {\r\n                rangeWithDots.push(\"...\");\r\n            }\r\n        }\r\n        rangeWithDots.push(i);\r\n        l = i;\r\n    }\r\n\r\n    return rangeWithDots;\r\n};\r\n","// * Types\r\nimport {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {AxiosResponse} from \"axios\";\r\nimport {authApi, AuthRespT} from \"../api/api\";\r\nimport {setIsLoggedIn} from \"../pages/Login/loginReducer\";\r\nimport {WorkersT} from \"../pages/WorkersTable/workersTableReducer\";\r\nimport {toast} from \"../helpers/helpers\";\r\n\r\ntype ActionsT =\r\n    ReturnType<typeof isAuth>\r\n    | ReturnType<typeof changeModalStatus>\r\n    | ReturnType<typeof appLoading>\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setPageData>| ReturnType<typeof setCurrentUsersIndexes>;\r\n\r\nexport type ModalStatusT = {\r\n    modalType?: \"add\" | \"update\";\r\n    optionalData: WorkersT;\r\n    isVisible: boolean;\r\n};\r\n\r\nexport type AuthUserDataT = {\r\n    email: string,\r\n    id: string\r\n};\r\n\r\nexport type PaginatorDataT = {\r\n    totalPageCount: Array<number>,\r\n    usersPerPage: number,\r\n    currentUsersIndexes: Array<number>\r\n}\r\n\r\nexport type InitialStateT = {\r\n    isAuth: boolean;\r\n    isAppLoading: boolean;\r\n    modalStatus: ModalStatusT;\r\n    authUserData: AuthUserDataT;\r\n    paginatorData: PaginatorDataT;\r\n};\r\n\r\n// * Actions\r\nconst sagasAppActions = {\r\n    AUTH: \"SAGA/APP/AUTH\"\r\n};\r\n\r\nconst reducerActions = {\r\n    AUTH: \"appReducer/AUTH\" as const,\r\n    MODAL_STATUS: \"appReducer/MODAL_STATUS\" as const,\r\n    APP_LOADING: \"appReducer/APP_LOADING\" as const,\r\n    SET_USER_DATA: \"appReducer/SET_USER_DATA\" as const,\r\n    SET_TOTAL_PAGE_COUNT: \"appReducer/SET_TOTAL_PAGE_COUNT\" as const,\r\n    SET_CURRENT_USER_INDEXES: \"appReducer/SET_CURRENT_USER_INDEXES\" as const,\r\n};\r\n\r\n// * Reducer\r\nconst initialState: InitialStateT = {\r\n    isAuth: false,\r\n    isAppLoading: false,\r\n    authUserData: {\r\n        email: \"\",\r\n        id: \"\"\r\n    },\r\n    modalStatus: {\r\n        modalType: \"add\",\r\n        isVisible: false,\r\n        optionalData: {} as WorkersT\r\n    },\r\n    paginatorData: {\r\n        totalPageCount: [0],\r\n        usersPerPage: 0,\r\n        currentUsersIndexes: [0]\r\n    }\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: ActionsT): InitialStateT => {\r\n    const {AUTH, MODAL_STATUS, APP_LOADING, SET_USER_DATA, SET_TOTAL_PAGE_COUNT, SET_CURRENT_USER_INDEXES} = reducerActions;\r\n\r\n    switch (action.type) {\r\n        case AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.status\r\n            };\r\n        }\r\n        case MODAL_STATUS: {\r\n            const {isVisible, modalType, optionalData} = action.modalStatus;\r\n            return {\r\n                ...state,\r\n                modalStatus: {...state.modalStatus, isVisible, modalType, optionalData: optionalData}\r\n            };\r\n        }\r\n        case APP_LOADING: {\r\n            return {\r\n                ...state,\r\n                isAppLoading: action.status\r\n            };\r\n        }\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                authUserData: {...state.authUserData, email: action.userData.email, id: action.userData.id}\r\n            };\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return {\r\n                ...state,\r\n                paginatorData: {...state.paginatorData, totalPageCount: action.pagesList, usersPerPage: action.usersPerPage}\r\n            };\r\n        }\r\n        case SET_CURRENT_USER_INDEXES: {\r\n            return {\r\n                ...state,\r\n                paginatorData: {...state.paginatorData, currentUsersIndexes: action.indexes}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// * AC\r\n\r\nexport const setCurrentUsersIndexes = (indexes: Array<number>) => {\r\n    return {\r\n        type: reducerActions.SET_CURRENT_USER_INDEXES,\r\n        indexes\r\n    } as const;\r\n};\r\n\r\nexport const isAuth = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.AUTH,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const appLoading = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.APP_LOADING,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const changeModalStatus = (modalStatus: ModalStatusT) => {\r\n    return {\r\n        type: reducerActions.MODAL_STATUS,\r\n        modalStatus\r\n    } as const;\r\n};\r\n\r\nexport const setUserData = (userData: AuthUserDataT) => {\r\n    return {\r\n        type: reducerActions.SET_USER_DATA,\r\n        userData\r\n    } as const;\r\n};\r\n\r\nexport const setPageData = (pagesList: Array<number>, usersPerPage: number) => {\r\n    return {\r\n        type: reducerActions.SET_TOTAL_PAGE_COUNT,\r\n        pagesList,\r\n        usersPerPage\r\n    } as const;\r\n};\r\n\r\n\r\n// * Sagas\r\nexport function* appWatcher() {\r\n    yield takeEvery(sagasAppActions.AUTH, authWorker);\r\n}\r\n\r\nexport function* authWorker() {\r\n    yield put(appLoading(true));\r\n    try {\r\n        const res: AxiosResponse<AuthRespT> = yield call(authApi.me);\r\n        const {email, _id} = res.data.data;\r\n        yield put(isAuth(true));\r\n        yield put(setUserData({email, id: _id}));\r\n        yield put(setIsLoggedIn(true));\r\n        yield put(appLoading(false));\r\n        yield call(toast, \"success\", `Welcome, ${res.data.data.email}`);\r\n    } catch (err) {\r\n        yield call(toast, \"info\", \"Please login or create a new account!\");\r\n        yield put(isAuth(false));\r\n        yield put(appLoading(false));\r\n    }\r\n}\r\n\r\nexport const authSA = () => ({type: sagasAppActions.AUTH});\r\n","// * Types\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport {authApi, LoginDataT, LoginRespT, MessageRespT} from \"../../api/api\";\nimport { AxiosResponse } from \"axios\";\nimport { toast } from \"../../helpers/helpers\";\nimport {setUserData} from \"../../App/appReducer\";\n\ntype ActionsT = ReturnType<typeof setIsLoggedIn>;\n\nexport type InitialStateT = {\n    isLoggedIn: boolean;\n};\n\n// * Actions\nconst sagasLoginActions = {\n    LOGIN: \"SAGA/LOGIN/LOGIN\",\n    LOGOUT: \"SAGA/LOGIN/LOGOUT\"\n};\n\nconst reducerActions = {\n    LOGIN: \"loginReducer/LOGIN_STATUS\" as const\n};\n\n// * Reducer\n const initialState: InitialStateT = {\n    isLoggedIn: false\n};\n\nexport const loginReducer = (state = initialState, action: ActionsT): InitialStateT => {\n    const { LOGIN } = reducerActions;\n\n    switch (action.type) {\n        case LOGIN: {\n            return {\n                ...state,\n                isLoggedIn: action.status\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// * AC\nexport const setIsLoggedIn = (status: boolean) => {\n    return {\n        type: reducerActions.LOGIN,\n        status\n    };\n};\n\n// * Sagas\nexport function* loginWatcher() {\n    yield takeEvery(sagasLoginActions.LOGIN, loginWorker);\n    yield takeEvery(sagasLoginActions.LOGOUT, logoutWorker);\n}\n\nexport function* loginWorker(action: ReturnType<typeof loginSA>) {\n    try {\n        const res: AxiosResponse<LoginRespT> = yield call(authApi.login, action.payload);\n        const {email, id} = res.data.data;\n        yield put(setIsLoggedIn(true));\n        yield put(setUserData({email, id}));\n        yield call(toast, \"success\", `Nice to see you, ${res.data.data.email}`);\n    } catch (err) {\n        yield put(setIsLoggedIn(false));\n        yield call(toast, \"fail\", err.message);\n    }\n}\n\nexport const loginSA = (payload: LoginDataT) =>\n    ({\n        type: sagasLoginActions.LOGIN,\n        payload\n    } as const);\n\nexport function* logoutWorker() {\n    try {\n        const res: AxiosResponse<MessageRespT> = yield call(authApi.logout);\n        yield put(setUserData({email: \"\", id: \"\"}));\n        yield put(setIsLoggedIn(false));\n        yield call(toast, \"success\", res.data.message);\n    } catch (err) {\n        yield call(toast, \"fail\", err.message);\n        yield put(setIsLoggedIn(true));\n    }\n}\n\nexport const logoutSA = () =>\n    ({\n        type: sagasLoginActions.LOGOUT\n    } as const);\n","import { createGlobalStyle } from \"styled-components/macro\";\r\nimport { ThemeType } from \"./theme\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\r\n  // Import the font link into the project\r\n  @import url('${({ theme }) => theme.font.source}');\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  *:focus {\r\n    outline: none;\r\n  }\r\n  *::selection {\r\n  }\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n  h1 {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  body {\r\n    font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n    font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n    font-weight: 500;\r\n    color: #000;\r\n  }\r\n  ul,\r\n  li {\r\n    list-style: none;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  button,\r\n  input {\r\n    outline: none;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  textarea {\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nexport const MB = styled.div<any>`\r\n    margin-bottom: ${props => props.margin};\r\n`\r\n\r\nexport const AppContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 20px;\r\n  \r\n  @media(max-width: ${({theme}) => theme.mediaQuery.tablet}) {\r\n    padding: 10px;\r\n  }\r\n`;","import React, { HTMLAttributes } from \"react\";\nimport { DetailedHTMLProps } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype WorkersPanelIconT = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    icon: \"add\" | \"update\" | \"delete\" | \"close\" | \"search\" | \"user\";\n    width: \"10\" | \"20\" | \"30\" | \"40\" | \"50\" | \"60\" | \"70\" | \"80\" | \"90\" | \"100\";\n};\n\nexport const WorkersPanelIcon = (props: WorkersPanelIconT) => {\n    const { icon, width, ...restProps } = props;\n    let finalIcon;\n\n    switch (icon) {\n        case \"add\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user-plus\"\n                    className=\"svg-inline--fa fa-user-plus fa-w-20\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 640 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#12b110\"\n                        d=\"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"update\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"pen\"\n                    className=\"svg-inline--fa fa-pen fa-w-16\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec9c0a\"\n                        d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"delete\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user-minus\"\n                    className=\"svg-inline--fa fa-user-minus fa-w-20\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 640 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec0a0a\"\n                        d=\"M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"close\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"times\"\n                    className=\"svg-inline--fa fa-times fa-w-11\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 352 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec0a0a\"\n                        d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"search\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"search\"\n                    className=\"svg-inline--fa fa-search fa-w-16\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#4579db\"\n                        d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"user\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user\"\n                    className=\"svg-inline--fa fa-user fa-w-14\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 448 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#4579db\"\n                        d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        default:\n            throw new Error('Please choose icon type => \"add\" | \"update\" | \"delete\"');\n    }\n\n    return <IconWrapper {...restProps}>{finalIcon}</IconWrapper>;\n};\n\nconst IconWrapper = styled.div<any>`\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport {Button} from \"../common/Button/Button\";\nimport {routes} from \"../../App/routes/routes\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateT} from \"../../App/store/store\";\nimport {logoutSA} from \"../../pages/Login/loginReducer\";\nimport {AppContainer} from \"../../styles/GlobalStyles\";\nimport {WorkersPanelIcon} from \"../common/SvgIcons/WorkersIcon\";\nimport {AuthUserDataT} from \"../../App/appReducer\";\n\nexport const Header = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n    const authUserData = useSelector<RootStateT, AuthUserDataT>((state) => state.app.authUserData);\n\n    const logOutHandler = () => dispatch(logoutSA());\n\n    return (\n        <NavBarWrap>\n            <AppContainer>\n                <NavBar>\n                    {isLoggedIn ? (\n                        <>\n                            <UserInfoWrap>\n                                <WorkersPanelIcon icon={\"user\"} width={\"20\"}/>\n                                <div>{authUserData.email}</div>\n                            </UserInfoWrap>\n                            <Button onClick={logOutHandler}>Logout</Button>\n                        </>\n                    ) : (\n                        <NavLink to={routes.login}>\n                            <Button>Login</Button>\n                        </NavLink>\n                    )}\n                    {isLoggedIn || (\n                        <NavLink to={routes.registration}>\n                            <Button>Sing in</Button>\n                        </NavLink>\n                    )}\n                </NavBar>\n            </AppContainer>\n        </NavBarWrap>\n    );\n};\n\nconst NavBarWrap = styled.div`\n  background-color: ${({theme}) => theme.color.secondary.main};\n`;\n\nconst NavBar = styled.nav`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 50px;\n\n  & > a {\n    margin-right: 15px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst UserInfoWrap = styled.div`\n  margin-right: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & > div:first-child {\n    margin-right: 10px;\n  }\n`;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n};\n\nexport const InputText: React.FC<SuperInputTextPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && // если есть пропс onChange\n            onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" && // если нажата кнопка Enter\n            onEnter && // и есть пропс onEnter\n            onEnter(); // то вызвать его\n    };\n\n    return (\n        <InputTextWrapper>\n            <StyledInput\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <StyledError>{error && <span>{error}</span>}</StyledError>\n        </InputTextWrapper>\n    );\n};\n\nconst InputTextWrapper = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\n    // Общие стили инпута\n\n    padding: 1rem 0.5rem;\n\n    height: 20px;\n    width: 100%;\n\n    font-size: ${({ theme }) => theme.font.size.default};\n    font-family: ${({ theme }) => theme.font.family.default};\n  box-shadow: ${({ theme }) => theme.shadow[3]};\n    border: 1px solid rgb(109, 109, 109);\n`;\n// Стили контейнера с ошибкой\nconst StyledError = styled.div`\n    position: absolute;\n    bottom: 1px;\n\n    // Стили текста ошибки\n    & > span {\n        font-size: ${({ theme }) => theme.font.size.s1};\n        color: red;\n    }\n`;\n","import React, { ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype PropsType = DefaultRadioPropsType & {\n    options?: any[];\n    onChangeOption?: (option: any) => void;\n};\n\nexport const RadioButtons: React.FC<PropsType> = ({\n    type,\n    name,\n    options,\n    value,\n    onChange,\n    onChangeOption,\n    ...restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value);\n        }\n    };\n\n    const mappedOptions: any[] = options\n        ? options.map((o, i) => (\n              <RadioContainer key={name + \"-\" + i}>\n                  <span>{o}</span>\n                  <input\n                      name={\"gender\"}\n                      type={\"radio\"}\n                      value={o}\n                      onChange={onChange}\n                      // checked={value === o}\n                      {...restProps}\n                  />\n                  <Checkmark className={\"checkmark\"} />\n              </RadioContainer>\n          ))\n        : [];\n\n    return <>{mappedOptions}</>;\n};\n\nconst RadioContainer = styled.label`\n    // The container\n    position: relative;\n\n    display: block;\n\n    padding-left: 25px;\n    padding-right: 15px;\n    margin-bottom: 12px;\n\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n    // Hide the browser's default radio button\n    & input {\n        position: absolute;\n\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    // On mouse-over, add a background color\n    &:hover input ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    }\n\n    // When the radio button is checked, add a blue background\n    & input:checked ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.primary.main};\n    }\n\n    // Show the indicator (dot/circle) when checked\n    & input:checked ~ .checkmark:after {\n        display: block;\n    }\n\n    // Style the indicator (dot/circle)\n    & .checkmark:after {\n        top: 5px;\n        left: 5px;\n\n        width: 6px;\n        height: 6px;\n\n        border-radius: 50%;\n        background: ${({ theme }) => theme.color.white};\n    }\n`;\n\nconst Checkmark = styled.div`\n    // Create a custom radio button\n    position: absolute;\n    bottom: 2px;\n    left: 0;\n\n    height: 16px;\n    width: 16px;\n\n    background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    border-radius: 50%;\n\n    // Create the indicator (the dot/circle - hidden when not checked)\n    &:after {\n        content: \"\";\n        position: absolute;\n        display: none;\n    }\n`;\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { InputText } from \"../common/InputText/InputText\";\r\nimport { RadioButtons } from \"../common/RadioButtons/RadioButtons\";\r\nimport { Button } from \"../common/Button/Button\";\r\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootStateT } from \"../../App/store/store\";\r\nimport { changeModalStatus } from \"../../App/appReducer\";\r\nimport { addWorkersSA, updateWorkerSA, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\r\nimport { MB } from \"../../styles/GlobalStyles\";\r\n\r\ntype ModalWindowPropsT = {\r\n    type?: \"add\" | \"update\";\r\n};\r\n\r\nexport const ModalWindow: React.FC<ModalWindowPropsT> = ({ type = \"add\", ...restProps }) => {\r\n    const dispatch = useDispatch();\r\n    const updatingWorker = useSelector<RootStateT, WorkersT>((state) => state.app.modalStatus.optionalData);\r\n\r\n    let initialWorkerData: WorkersT;\r\n\r\n    if (type === \"add\") {\r\n        initialWorkerData = {\r\n            fullName: \"\",\r\n            contacts: \"\",\r\n            gender: \"male\",\r\n            salary: \"\",\r\n            position: \"\",\r\n            isLoading: false\r\n        };\r\n    } else {\r\n        initialWorkerData = {\r\n            fullName: updatingWorker.fullName,\r\n            contacts: updatingWorker.contacts,\r\n            gender: updatingWorker.gender,\r\n            salary: updatingWorker.salary,\r\n            position: updatingWorker.position,\r\n            isLoading: false\r\n        };\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialWorkerData,\r\n        onSubmit: (values) => {\r\n            if (type === \"add\") {\r\n                dispatch(addWorkersSA(values));\r\n            } else {\r\n                dispatch(updateWorkerSA({ ...updatingWorker, ...values }));\r\n            }\r\n\r\n            dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\r\n        }\r\n    });\r\n\r\n    const closeModalHandler = () => dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\r\n\r\n    return (\r\n        <ModalForm onSubmit={formik.handleSubmit} data-form={\"modal\"}>\r\n            <IconWrap>\r\n                <WorkersPanelIcon icon={\"close\"} width={\"20\"} onClick={closeModalHandler} />\r\n            </IconWrap>\r\n            <ModalTitle>{type === \"add\" ? \"Add new worker\" : \"Update worker data\"}</ModalTitle>\r\n            <MB margin={\"20px\"}>\r\n                <InputText\r\n                    type={\"name\"}\r\n                    value={formik.values.fullName}\r\n                    id={\"fullName\"}\r\n                    name={\"fullName\"}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    placeholder={\"Full name\"}\r\n                />\r\n            </MB>\r\n\r\n            <RadioWrap role=\"group\" aria-labelledby=\"my-radio-group\">\r\n                <RadioButtons\r\n                    options={[\"male\", \"female\"]}\r\n                    onChange={formik.handleChange}\r\n                    value={formik.initialValues.gender}\r\n                />\r\n            </RadioWrap>\r\n\r\n            <MB margin={\"20px\"}>\r\n                <InputText\r\n                    type={\"contacts\"}\r\n                    value={formik.values.contacts}\r\n                    id={\"contacts\"}\r\n                    name={\"contacts\"}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    placeholder={\"Contacts\"}\r\n                />\r\n            </MB>\r\n            <MB margin={\"20px\"}>\r\n                <InputText\r\n                    type={\"salary\"}\r\n                    value={formik.values.salary}\r\n                    id={\"salary\"}\r\n                    name={\"salary\"}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    placeholder={\"Salary\"}\r\n                />\r\n            </MB>\r\n            <MB margin={\"20px\"}>\r\n                <InputText\r\n                    type={\"position\"}\r\n                    value={formik.values.position}\r\n                    id={\"position\"}\r\n                    name={\"position\"}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    placeholder={\"Position\"}\r\n                />\r\n            </MB>\r\n\r\n            <Button type={\"submit\"}>{type === \"add\" ? \"Add\" : \"Update\"}</Button>\r\n        </ModalForm>\r\n    );\r\n};\r\n\r\nconst ModalForm = styled.form`\r\n    padding: 30px 20px;\r\n    width: 20%;\r\n    min-width: 280px;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: ${({ theme }) => theme.color.secondary.light};\r\n    z-index: 300;\r\n`;\r\n\r\nconst RadioWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst IconWrap = styled.div`\r\n    position: absolute;\r\n    right: 5%;\r\n    top: 1%;\r\n`;\r\n\r\nconst ModalTitle = styled.h3`\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport {Circles, useLoading} from '@agney/react-loading';\r\nimport styled from \"styled-components/macro\";\r\n\r\ntype LoaderPropsT = {\r\n    size: number\r\n    color?: string\r\n}\r\n\r\nexport function Loader(props: LoaderPropsT) {\r\n    const {containerProps, indicatorEl} = useLoading({\r\n        loading: true,\r\n        indicator: <Circles />,\r\n    });\r\n\r\n    return (\r\n        <LoaderWrapper {...containerProps} width={props.size} color={props.color ? props.color : \"#4579db\"}>\r\n            {indicatorEl}\r\n        </LoaderWrapper>\r\n    );\r\n}\r\n\r\nconst LoaderWrapper = styled.section<{width: number, color: string}>`\r\n    width: ${props => props.width + \"px\"};\r\n    color: ${props => props.color};\r\n`;","import {Loader} from \"./Loader\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const TableLoader = () => {\r\n    return(\r\n        <LoaderWrapper>\r\n            <td>\r\n                <Loader size={200} />\r\n            </td>\r\n        </LoaderWrapper>\r\n    )\r\n}\r\n\r\n\r\nexport const TableDataLoader = () => {\r\n    return (\r\n        <TableItemLoader>\r\n            <Loader size={25} color={\"#dbb145\"} />\r\n        </TableItemLoader>\r\n    );\r\n};\r\n\r\nconst TableItemLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-10%);\r\n`;\r\n\r\n\r\nconst LoaderWrapper = styled.tr`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeModalStatus } from \"../../App/appReducer\";\nimport { deleteWorkersSA, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\nimport { formatDate } from \"../../helpers/helpers\";\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\nimport styled from \"styled-components/macro\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { Loader } from \"../common/Loader/Loader\";\nimport { TableDataLoader } from \"../common/Loader/Loaders\";\n\ntype TableMainRowPropsT = {\n    workerData: WorkersT;\n    index: number;\n};\n\nexport const TableMainRow: React.FC<TableMainRowPropsT> = ({ workerData, index, ...restProps }) => {\n    const dispatch = useDispatch();\n\n    const updateWorker = () => {\n        dispatch(changeModalStatus({ isVisible: true, modalType: \"update\", optionalData: workerData }));\n    };\n\n    const deleteWorker = () => {\n        workerData._id && dispatch(deleteWorkersSA(workerData._id));\n    };\n\n    return (\n        <TableBodyRow>\n            <TableData>{index}</TableData>\n            <TableData>{workerData.fullName}</TableData>\n            <TableData>{workerData.gender}</TableData>\n            <TableData>{workerData.contacts}</TableData>\n            <TableData>{workerData.updated && formatDate(workerData.updated)}</TableData>\n            <TableData>{workerData.salary}</TableData>\n            <TableData>{workerData.position}</TableData>\n            <TableDataUsePanel>\n                {workerData.isLoading ? (\n                    <TableDataLoader />\n                ) : (\n                    <>\n                        <WorkersPanelIcon icon={\"delete\"} width={\"20\"} onClick={deleteWorker} />\n                        <WorkersPanelIcon icon={\"update\"} width={\"20\"} onClick={updateWorker} />\n                    </>\n                )}\n            </TableDataUsePanel>\n        </TableBodyRow>\n    );\n};\n\n\n\nconst TableBodyRow = styled.tr`\n    transition: all 0.2s ease;\n\n    &:nth-child(even) {\n        background-color: ${({ theme }) => theme.color.primary.light};\n    }\n\n    &:hover {\n        background-color: ${({ theme }) => theme.color.secondary.light};\n    }\n`;\nconst TableData = styled.td`\n    text-align: center;\n    padding: 10px 0;\n`;\n\nconst TableDataUsePanel = styled.td`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 0;\n\n    & > div {\n        margin-right: 5px;\n\n        &:last-child {\n            margin-right: 0;\n        }\n    }\n`;\n\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { getWorkersSA, setFilteredWorkers, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\nimport React, { FormEvent, useState } from \"react\";\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\nimport { InputText } from \"../common/InputText/InputText\";\nimport styled from \"styled-components/macro\";\n\nexport const Search = () => {\n    const dispatch = useDispatch();\n    const workers = useSelector<RootStateT, Array<WorkersT>>((state) => state.workers.workers);\n    const [searchVal, setSearchVal] = useState<string>(\"\");\n\n    const searchWorkers = (e: FormEvent<HTMLInputElement>) => {\n        const { value } = e.currentTarget;\n        setSearchVal(value);\n        if (!value.trim()) {\n            dispatch(getWorkersSA());\n        } else {\n            const matchedWorkers = workers.filter((w) => w.fullName.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n            dispatch(setFilteredWorkers(matchedWorkers));\n        }\n    };\n\n    return (\n        <SearchWrap>\n            <SearchInputWrap>\n                <SearchIconWrap>\n                    <WorkersPanelIcon icon={\"search\"} width={\"20\"} />\n                </SearchIconWrap>\n                <InputText value={searchVal} type={\"search\"} placeholder={\"Search by name...\"} onInput={searchWorkers} />\n            </SearchInputWrap>\n        </SearchWrap>\n    );\n};\n\nconst SearchWrap = styled.div`\n    width: 20%;\n    position: relative;\n`;\n\nconst SearchIconWrap = styled.div`\n    position: absolute;\n    top: 50%;\n    right: 2%;\n    transform: translateY(-50%);\n    z-index: 100;\n`;\n\nconst SearchInputWrap = styled.div`\n  position: relative;\n    min-width: 200px;\n`;\n\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport styled, {StyledComponentProps} from \"styled-components/macro\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[] | undefined\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nexport const Select: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options, onChangeOption,\r\n        value,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeOption) {\r\n            onChangeOption(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const mappedOptions: any[] | undefined = options ? options.map(option => {\r\n        return (\r\n            <React.Fragment key={option}>\r\n                <StyledInput onChange={onChangeCallback}\r\n                             name=\"test\" type=\"radio\"\r\n                             id={option}\r\n                             value={option}\r\n                             checked={value === option}\r\n                             {...restProps}\r\n                />\r\n                <Option className={\"option\"} htmlFor={option}>{option}</Option>\r\n            </React.Fragment>\r\n        )\r\n    }) : undefined;\r\n\r\nreturn (\r\n        <SelectWrapper tabIndex={1}>\r\n            {mappedOptions}\r\n</SelectWrapper>\r\n)\r\n    ;\r\n}\r\n\r\n// Styles\r\nconst SelectWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  position: relative;\r\n\r\n  width: 250px;\r\n  height: 40px;\r\n  outline: none;\r\n\r\n  cursor: pointer;\r\n\r\n  \r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n    \r\n    & .option {\r\n      position: relative;\r\n\r\n      pointer-events: all;\r\n    }\r\n  }\r\n`\r\n\r\nconst Option = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n\r\n  padding: 0 30px 0 10px;\r\n\r\n  min-height: 40px;\r\n\r\n  background: ${({theme}) => theme.color.grey[\"200\"]};\r\n  color: ${({theme}) => theme.color.black};\r\n  border: none;\r\n  border-top: ${({theme}) => theme.color.primary.light} solid 1px;\r\n\r\n  pointer-events: none;\r\n  order: 2;\r\n  transition: background .4s ease-in-out;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${({theme}) => theme.color.white};\r\n    background: ${({theme}) => theme.color.primary.main};\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\r\n  position: absolute;\r\n  left: -99999px;\r\n  \r\n  opacity: 0;\r\n\r\n  // Active value\r\n  &:checked + label {\r\n    order: 1;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    background: ${({theme}) => theme.color.grey[\"200\"]};\r\n    border-top: none;\r\n\r\n    &:hover {\r\n      color: ${({theme}) => theme.color.white};\r\n      background: ${({theme}) => theme.color.primary.main};\r\n    }\r\n  }\r\n\r\n  // Arrow\r\n  &:checked + label:after {\r\n    content: '';\r\n    \r\n    position: absolute;\r\n    right: 15px;\r\n    top: calc(50% - 2.5px);\r\n    z-index: 3;\r\n\r\n    width: 0;\r\n    height: 0;\r\n\r\n    border-left: 5px solid transparent;\r\n    border-right: 5px solid transparent;\r\n    border-top: 5px solid white;\r\n    pointer-events: none;\r\n  }\r\n\r\n  // Square containing the arrow\r\n  &:checked + label:before {\r\n    content: '';\r\n    \r\n    position: absolute;\r\n    right: 0;\r\n\r\n    height: 40px;\r\n    width: 40px;\r\n\r\n    background: ${({theme}) => theme.color.primary.main};\r\n  }\r\n`","import { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState } from \"react\";\r\nimport { RootStateT } from \"../../App/store/store\";\r\nimport { setCurrentUsersIndexes } from \"../../App/appReducer\";\r\nimport { calcPagination } from \"../../helpers/helpers\";\r\nimport { Button } from \"../common/Button/Button\";\r\nimport { v1 } from \"uuid\";\r\nimport styled from \"styled-components/macro\";\r\n\r\ntype PaginatorPropsT = {\r\n    currentPage: number;\r\n    setCurrentPage: (param: number) => void;\r\n}\r\n\r\nexport const Paginator = (props: PaginatorPropsT) => {\r\n    const dispatch = useDispatch();\r\n    // const [currentPage, setCurrentPage] = useState<number>(1);\r\n    const pagesList = useSelector<RootStateT, Array<number>>((state) => state.app.paginatorData.totalPageCount);\r\n    const usersPerPage = useSelector<RootStateT, number>((state) => state.app.paginatorData.usersPerPage);\r\n\r\n    const onPagButtonClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        props.setCurrentPage(+e.currentTarget.value);\r\n\r\n        const currentPage = +e.currentTarget.value;\r\n\r\n        const lastIndex = usersPerPage * currentPage;\r\n        const firstIndex = lastIndex - usersPerPage;\r\n        if(lastIndex!== 0) {\r\n            dispatch(setCurrentUsersIndexes([firstIndex, lastIndex]));\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PaginatorWrap>\r\n            {calcPagination(pagesList, props.currentPage).map((p) => {\r\n                if (p !== \"...\") {\r\n                    return (\r\n                        <Button\r\n                            key={v1()}\r\n                            onClick={onPagButtonClick}\r\n                            value={p}\r\n                            style={{ backgroundColor: p === props.currentPage ? \"#dbb145\" : \"\" }}\r\n                        >\r\n                            {p}\r\n                        </Button>\r\n                    );\r\n                }\r\n                return (\r\n                    <Button key={v1()} value={p} style={{ cursor: \"auto\" }}>\r\n                        {p}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </PaginatorWrap>\r\n    );\r\n};\r\n\r\nconst PaginatorWrap = styled.div`\r\n    & > button {\r\n        margin-right: 5px;\r\n\r\n        &:last-child {\r\n            margin-right: 0;\r\n        }\r\n    }\r\n`;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useState } from \"react\";\r\nimport { changeModalStatus, setCurrentUsersIndexes, setPageData } from \"../../App/appReducer\";\r\nimport { WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\r\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\r\nimport { Search } from \"../Search/Search\";\r\nimport { Select } from \"../common/Select/Select\";\r\nimport styled from \"styled-components/macro\";\r\nimport { RootStateT } from \"../../App/store/store\";\r\nimport { getTotalPagesList } from \"../../helpers/helpers\";\r\nimport { Paginator } from \"../Paginator/Paginator\";\r\n\r\ntype SelectValT = \"5\" | \"10\" | \"25\" | \"all\";\r\n\r\nexport const TableControlPanel = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState<number>(1);\r\n    const [selectedVal, setSelectedVal] = useState<SelectValT>(\"all\");\r\n    const workers = useSelector<RootStateT, Array<WorkersT>>((state) => state.workers.workers);\r\n\r\n    const addWorker = () =>\r\n        dispatch(\r\n            changeModalStatus({\r\n                isVisible: true,\r\n                modalType: \"add\",\r\n                optionalData: {} as WorkersT\r\n            })\r\n        );\r\n\r\n    const onSelectChange = (value: SelectValT) => {\r\n        setSelectedVal(value);\r\n        if (value !== \"all\") {\r\n            const pagesList = getTotalPagesList(value, workers.length, dispatch);\r\n            dispatch(setPageData(pagesList, +value));\r\n            dispatch(setCurrentUsersIndexes([0, +value]));\r\n        } else {\r\n            dispatch(setCurrentUsersIndexes([0]));\r\n            dispatch(setPageData([1], workers.length));\r\n        }\r\n\r\n        setCurrentPage(1)\r\n    };\r\n\r\n    return (\r\n        <TablePanelWrap>\r\n            <WorkersPanelIcon icon={\"add\"} width={\"30\"} onClick={addWorker} />\r\n            <Search />\r\n            <Select options={[\"5\", \"10\", \"25\", \"all\"]} value={selectedVal} onChangeOption={onSelectChange} />\r\n            <Paginator currentPage={currentPage} setCurrentPage={setCurrentPage} />\r\n        </TablePanelWrap>\r\n    );\r\n};\r\n\r\nconst TablePanelWrap = styled.div`\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    & > * {\r\n        margin-right: 20px;\r\n    }\r\n`;\r\n\r\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { routes } from \"../../App/routes/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootStateT } from \"../../App/store/store\";\nimport styled from \"styled-components/macro\";\nimport { getWorkersSA, WorkersT } from \"./workersTableReducer\";\nimport { ModalWindow } from \"../../components/Modal/ModalWindow\";\nimport { ModalStatusT } from \"../../App/appReducer\";\nimport { TableMainRow } from \"../../components/TableMainRow/TableMainRow\";\nimport { TableLoader } from \"../../components/common/Loader/Loaders\";\nimport { TableControlPanel } from \"../../components/TableControlPanel/TableControlPanel\";\n\nexport const WorkersTable = () => {\n    const dispatch = useDispatch();\n\n    const modalStatus = useSelector<RootStateT, ModalStatusT>((state) => state.app.modalStatus);\n\n    useEffect(() => {\n        dispatch(getWorkersSA());\n    }, [dispatch]);\n\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n    const [fI, lI] = useSelector<RootStateT, Array<number>>((state) => state.app.paginatorData.currentUsersIndexes);\n    const currentWorkers = useSelector<RootStateT, Array<WorkersT>>((state) => state.workers.workers.slice(fI, lI));\n    const isTableLoading = useSelector<RootStateT, boolean>((state) => state.workers.isTableLoading);\n\n    if (!isLoggedIn) {\n        return <Redirect to={routes.login} />;\n    }\n\n    return (\n        <MainTable>\n            <TableTitle>Workers Table</TableTitle>\n            <TableControlPanel />\n            <TableWrapper>\n                <Table>\n                    <thead>\n                        <TableHeaderRow>\n                            <th>#</th>\n                            <th>Full Name</th>\n                            <th>gender</th>\n                            <th>contacts</th>\n                            <th>updated</th>\n                            <th>salary</th>\n                            <th>position</th>\n                            <th></th>\n                        </TableHeaderRow>\n                    </thead>\n                    <tbody>\n                        {isTableLoading ? (\n                            <TableLoader />\n                        ) : (\n                            currentWorkers.map((w, i) => {\n                                return <TableMainRow workerData={w} index={i} key={w._id} />;\n                            })\n                        )}\n                    </tbody>\n                </Table>\n                {modalStatus.isVisible && <ModalWindow type={modalStatus.modalType} />}\n            </TableWrapper>\n        </MainTable>\n    );\n};\n\nconst MainTable = styled.div``;\n\nconst TableWrapper = styled.div`\n    overflow-x: auto;\n`;\n\nconst Table = styled.table`\n    width: 100%;\n    margin: 0 auto;\n    border-collapse: collapse;\n    box-shadow: ${({ theme }) => theme.shadow[5]};\n    border: 1px solid rgba(146, 141, 141, 0.7);\n`;\n\nconst TableTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n`;\n\nconst TableHeaderRow = styled.tr`\n    background-color: ${({ theme }) => theme.color.secondary.main};\n\n    & > th {\n        padding: 20px;\n    }\n`;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const Checkbox: React.FC<PropsType> = (props) => {\r\n    const { type, onChange, children, ...restProps } = props;\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange(e);\r\n    };\r\n\r\n    return (\r\n        <StyledLabel>\r\n            <input type={\"checkbox\"} onChange={onChangeCallback} {...restProps} />\r\n            <span>{children}</span>\r\n        </StyledLabel>\r\n    );\r\n};\r\n\r\n// Styles\r\nconst StyledLabel = styled.label<any>`\r\n    // Общие стили чекбокса\r\n    cursor: pointer;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    // Стили для элемента input c type=\"checkbox\". Тут убираеться дефолтный чекбокс\r\n    & > input {\r\n        position: absolute;\r\n        z-index: -1;\r\n        opacity: 0;\r\n    }\r\n\r\n    // Стили для текста чекбокса\r\n    & > span {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        user-select: none;\r\n    }\r\n\r\n    // Стили коробки (кнопки) чекбокса\r\n    & > span::before {\r\n        content: \"\";\r\n        display: inline-block;\r\n        width: 16px;\r\n        height: 16px;\r\n        flex-shrink: 0;\r\n        flex-grow: 0;\r\n        border: 1px solid ${({ theme }) => theme.color.grey[\"500\"]};\r\n        margin-right: 0.5em;\r\n        background-repeat: no-repeat;\r\n        background-position: center center;\r\n        background-size: 50% 50%;\r\n    }\r\n\r\n    // стили при наведении курсора на checkbox\r\n    & > input:not(:disabled):not(:checked) + span:hover::before {\r\n        border-color: ${({ theme }) => theme.color.grey[\"500\"]}; // 183\r\n    }\r\n\r\n    // стили для активного чекбокса (при нажатии на него)\r\n    & > input:not(:disabled):active + span::before {\r\n        background-color: ${({ theme }) => theme.color.grey[\"500\"]};\r\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в фокусе\r\n    & > input:focus + span::before {\r\n        box-shadow: ${({ theme }) => theme.shadow[\"0\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в фокусе и не находящегося в состоянии checked\r\n    & > input:focus:not(:checked) + span::before {\r\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в состоянии checked\r\n    & > input:checked + span::before {\r\n        border-color: ${({ theme }) => theme.color.primary.main};\r\n        background-color: ${({ theme }) => theme.color.primary.main};\r\n        background-size: 65% 65%;\r\n        background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\");\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в состоянии disabled\r\n    & > input:disabled + span::before {\r\n        background-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n`;\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n    children: string; // Checkbox text\r\n};\r\n","import React from \"react\";\nimport { InputText } from \"../../components/common/InputText/InputText\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { Checkbox } from \"../../components/common/Checkbox/Checkbox\";\nimport styled from \"styled-components/macro\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { routes } from \"../../App/routes/routes\";\nimport { loginSA } from \"./loginReducer\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { MB } from \"../../styles/GlobalStyles\";\n\nexport type LoginFormT = {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n};\n\nexport const Login = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n\n    const validate = (values: LoginFormT) => {\n        const errors: LoginFormT = {} as LoginFormT;\n        if (!values.password) {\n            errors.password = \"Required\";\n        } else if (values.password.length < 5) {\n            errors.password = \"Must be 5 characters or more\";\n        }\n\n        if (!values.email) {\n            errors.email = \"Required\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n        } else if (values.email.length > 50) {\n            errors.email = \"Your email is too long :-(\";\n        }\n\n        return errors;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\" || \"yehor@gmail.com\",\n            password: \"\" || \"yehor123\",\n            rememberMe: false\n        },\n        validate,\n        onSubmit: (values) => {\n            dispatch(loginSA(values));\n        }\n    });\n\n    const inputValidation = (fieldType: \"password\" | \"email\"): string => {\n        return formik.touched[fieldType] && formik.errors[fieldType] ? `${formik.errors[fieldType]}` : \"\";\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to={routes.main} />;\n    }\n\n    return (\n        <>\n            <div>\n                <FormStyle onSubmit={formik.handleSubmit}>\n                    {/*{isFormPending && (*/}\n                    {/*    <Overlay>*/}\n                    {/*        <span>Loading...</span>*/}\n                    {/*    </Overlay>*/}\n                    {/*)}*/}\n                    <FormTitle>Login</FormTitle>\n\n                    <MB margin={\"20px\"}>\n                        <InputText\n                            type={\"email\"}\n                            value={formik.values.email}\n                            id={\"email\"}\n                            name={\"email\"}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            placeholder={\"Email\"}\n                            error={inputValidation(\"email\")}\n                        />\n                    </MB>\n                    <MB margin={\"20px\"}>\n                        <InputText\n                            type={\"password\"}\n                            value={formik.values.password}\n                            name={\"password\"}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            placeholder={\"Password\"}\n                            error={inputValidation(\"password\")}\n                        />\n                    </MB>\n\n                    <MB margin={\"20px\"}>\n                        <Checkbox checked={formik.values.rememberMe} onChange={formik.handleChange} name={\"rememberMe\"}>\n                            Remember me\n                        </Checkbox>\n                    </MB>\n                    <Button type={\"submit\"}>Login</Button>\n                    <NavLink to={routes.registration}>Registration</NavLink>\n                </FormStyle>\n            </div>\n        </>\n    );\n};\n\nconst FormStyle = styled.form`\n    margin: 0 auto;\n    padding: 10px 15px;\n    width: 30%;\n    min-width: 300px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n    background-color: ${({ theme }) => theme.color.secondary.light};\n    box-shadow: ${({ theme }) => theme.shadow[3]};\n\n`;\n\nexport const FormTitle = styled.h3`\n    margin-bottom: 20px;\n`;\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #267fd457;\n    backdrop-filter: blur(5px);\n    z-index: 10;\n\n    & > span {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -100%);\n    }\n`;\n","// * Types\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport {authApi, MessageRespT, RegistrationDataT} from \"../../api/api\";\nimport { AxiosResponse } from \"axios\";\nimport { toast } from \"../../helpers/helpers\";\n\ntype ActionsT = ReturnType<typeof isRegistered>;\n\nexport type InitialStateT = {\n    isRegistered: boolean;\n};\n\n//* Actions\nconst reducerActions = {\n    REGISTERED_STATUS: \"registrationReducer/REGISTERED_STATUS\" as const\n};\n\nconst sagasRegistrationActions = {\n    REGISTRATION: \"SAGA/REGISTRATION/REGISTRATION\"\n};\n\n// * reducer\nconst initialState: InitialStateT = {\n    isRegistered: false\n};\n\nexport const registrationReducer = (state = initialState, action: ActionsT): InitialStateT => {\n    switch (action.type) {\n        case reducerActions.REGISTERED_STATUS: {\n            return {\n                ...state,\n                isRegistered: action.status\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// * AC\nexport const isRegistered = (status: boolean) => {\n    return {\n        type: reducerActions.REGISTERED_STATUS,\n        status\n    };\n};\n\n// * saga\nexport function* registrationWatcher() {\n    yield takeEvery(sagasRegistrationActions.REGISTRATION, registrationWorker);\n}\n\nfunction* registrationWorker(action: ReturnType<typeof registrationSA>) {\n    try {\n        const res: AxiosResponse<MessageRespT> = yield call(authApi.registration, action.payload);\n        yield call(toast, \"success\", res.data.message);\n        yield put(isRegistered(true));\n    } catch (err) {\n        yield call(toast, \"fail\", err.message);\n        yield put(isRegistered(false));\n    }\n}\n\nexport const registrationSA = (payload: RegistrationDataT) => {\n    return {\n        type: sagasRegistrationActions.REGISTRATION,\n        payload\n    } as const;\n};\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport styled from \"styled-components\";\nimport { InputText } from \"../../components/common/InputText/InputText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authApi } from \"../../api/api\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { Redirect } from \"react-router-dom\";\nimport { routes } from \"../../App/routes/routes\";\nimport { registrationSA } from \"./registrationReducer\";\nimport { MB } from \"../../styles/GlobalStyles\";\nimport { FormTitle } from \"../Login/Login\";\n\nexport type RegistrationFormT = {\n    email: string;\n    password: string | undefined;\n    confirmPassword: string;\n};\n\nexport const Registration = () => {\n    const dispatch = useDispatch();\n    const isRegistered = useSelector<RootStateT, boolean>((state) => state.registration.isRegistered);\n\n    const validate = (values: RegistrationFormT) => {\n        const errors: RegistrationFormT = {} as RegistrationFormT;\n        if (!values.password) {\n            errors.password = \"password required\";\n        } else if (values.password.length < 5) {\n            errors.password = \"Must be more than 5 characters\";\n        } else if (!values.confirmPassword) {\n            errors.confirmPassword = \"confirm your password\";\n        } else if (values.password !== values.confirmPassword) {\n            errors.confirmPassword = \"The password and confirm password fields do not match\";\n        }\n        if (!values.email) {\n            errors.email = \"email required\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n        } else if (values.email.length > 50) {\n            errors.email = \"email is too long\";\n        }\n\n        return errors;\n    };\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\"\n        },\n        validate,\n        onSubmit: (values) => {\n            const { email, password } = values;\n            dispatch(registrationSA({ email, password }));\n        }\n    });\n    const inputValidation = (fieldType: \"password\" | \"email\" | \"confirmPassword\"): string => {\n        return formik.touched[fieldType] && formik.errors[fieldType] ? `${formik.errors[fieldType]}` : \"\";\n    };\n\n    if (isRegistered) {\n        return <Redirect to={routes.login} />;\n    }\n\n    return (\n        <>\n            <>\n                <div>\n                    <StyledForm onSubmit={formik.handleSubmit}>\n                        <FormTitle>Sing up</FormTitle>\n\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"email\"}\n                                value={formik.values.email}\n                                id={\"email\"}\n                                name={\"email\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"Email\"}\n                                error={inputValidation(\"email\")}\n                            />\n                        </MB>\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"password\"}\n                                value={formik.values.password}\n                                name={\"password\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"Password\"}\n                                error={inputValidation(\"password\")}\n                            />\n                        </MB>\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"password\"}\n                                value={formik.values.confirmPassword}\n                                name={\"confirmPassword\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"confirm password\"}\n                                error={inputValidation(\"confirmPassword\")}\n                            />\n                        </MB>\n\n                        {/*{registrationError && <div>{registrationError}</div>}*/}\n                        <Button type={\"submit\"}>Submit</Button>\n                    </StyledForm>\n                </div>\n            </>\n        </>\n    );\n};\n\nconst StyledForm = styled.form`\n    margin: 0 auto;\n    padding: 10px 15px;\n    width: 30%;\n    min-width: 300px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n    background-color: ${({ theme }) => theme.color.secondary.light};\n    box-shadow: ${({ theme }) => theme.shadow[3]};\n`;\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #267fd457;\n    backdrop-filter: blur(5px);\n    z-index: 10;\n\n    & > span {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -100%);\n    }\n`;\n","import React from \"react\";\r\n\r\nexport const NotFound = () => {\r\n    return(\r\n        <h1>Error 404</h1>\r\n    )\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {routes} from \"../../App/routes/routes\";\r\nimport {WorkersTable} from \"../../pages/WorkersTable/WorkersTable\";\r\nimport {Login} from \"../../pages/Login/Login\";\r\nimport {Registration} from \"../../pages/Registration/Registration\";\r\nimport {NotFound} from \"../../pages/NotFound/NotFound\";\r\nimport Toast from 'light-toast';\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route exact path={routes.main} render={() => <WorkersTable />} />\r\n                <Route exact path={routes.login} render={() => <Login />} />\r\n                <Route exact path={routes.registration} render={() => <Registration />} />\r\n                <Route render={() => <NotFound />} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Header } from \"../components/Header/Header\";\r\nimport { Main } from \"../components/Main/Main\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSA, changeModalStatus } from \"./appReducer\";\r\nimport { AppContainer } from \"../styles/GlobalStyles\";\r\nimport { RootStateT } from \"./store/store\";\r\nimport { Loader } from \"../components/common/Loader/Loader\";\r\nimport styled from \"styled-components/macro\";\r\nimport { WorkersT } from \"../pages/WorkersTable/workersTableReducer\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isAppLoading = useSelector<RootStateT, boolean>((state) => state.app.isAppLoading);\r\n\r\n    const isModalOpen = useSelector<RootStateT, boolean>((state) => state.app.modalStatus.isVisible);\r\n    useEffect(() => {\r\n        dispatch(authSA());\r\n    }, [dispatch]);\r\n\r\n    const onOverlayClick = () => {\r\n        dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isModalOpen && <Overlay onClick={onOverlayClick} />}\r\n            {isAppLoading ? (\r\n                <BigLoaderWrap>\r\n                    <Loader size={250} />\r\n                </BigLoaderWrap>\r\n            ) : (\r\n                <>\r\n                    <Header />\r\n                    <AppContainer>\r\n                        <Main />\r\n                    </AppContainer>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nconst BigLoaderWrap = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: rgba(117, 117, 117, 0.7);\r\n    backdrop-filter: blur(5px);\r\n    z-index: 200;\r\n`;\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { loginReducer, loginWatcher } from \"../../pages/Login/loginReducer\";\nimport { registrationReducer, registrationWatcher } from \"../../pages/Registration/registrationReducer\";\nimport { workersTableReducer, workersWatcher } from \"../../pages/WorkersTable/workersTableReducer\";\nimport { all } from \"redux-saga/effects\";\nimport { appReducer, appWatcher } from \"../appReducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nexport type RootStateT = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    registration: registrationReducer,\n    workers: workersTableReducer,\n    app: appReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootWatcher);\n\nfunction* rootWatcher() {\n    yield all([loginWatcher(), appWatcher(), registrationWatcher(), workersWatcher()]);\n}\n\n","import { darken, lighten } from \"polished\";\r\n\r\nexport type ThemeType = typeof theme;\r\n\r\nconst primaryColor = '#4579db'\r\nconst secondaryColor = '#dbb145'\r\n\r\nexport const theme = {\r\n    variable: {\r\n        headerHeight: '120px'\r\n    },\r\n    color: {\r\n        primary: {\r\n            main: primaryColor,\r\n            light: `${lighten(0.1, primaryColor)}`,\r\n            dark: `${darken(0.1, primaryColor)}`\r\n        },\r\n        secondary: {\r\n            main: secondaryColor,\r\n            light: `${lighten(0.1, secondaryColor)}`,\r\n            dark: `${darken(0.1, secondaryColor)}`\r\n        },\r\n        grey: {\r\n            100: '#f5f5f5',\r\n            200: '#eeeeee',\r\n            300: '#e0e0e0',\r\n            400: '#bdbdbd',\r\n            500: '#9e9e9e',\r\n            600: '#757575',\r\n            700: '#616161',\r\n            800: '#424242',\r\n            900: '#212121',\r\n        },\r\n        black: '#1a1a1a',\r\n        white: '#e9e9e9',\r\n        error: '#db4545',\r\n        success: '#55e31b',\r\n    },\r\n    font: {\r\n        source: `https://fonts.googleapis.com/css2?family=Montserrat:wght@600&family=Roboto&display=swap`,\r\n        family: {\r\n            default: `'Roboto', sans-serif;`,\r\n            montserrat: `'Montserrat', sans-serif;`\r\n        },\r\n        size: {\r\n            s3: '0.512rem', // 8.19px\r\n            s2: '0.64rem', // 10.24px\r\n            s1: '0.8rem', // 12.80px\r\n            default: '16px', // https://type-scale.com/ - Major third\r\n            b1: '1.25rem', // 20.00px\r\n            b2: '1.563rem', // 25.00px\r\n            b3: '1.953rem', // 31.25px\r\n            b4: '2.441rem', // 39.06px\r\n            b5: '3.052rem' // 48.83px\r\n        }\r\n    },\r\n    shadow: {\r\n        0: 'none',\r\n        1: '2px 2px 5px rgba(0,0,0,0.2)',\r\n        2: '2px 2px 6px rgba(0,0,0,0.2)',\r\n        3: '2px 2px 7px rgba(0,0,0,0.2)',\r\n        4: '3px 3px 8px rgba(0,0,0,0.5)',\r\n    },\r\n    effect: {\r\n        glow: `drop-shadow(0px 0px 5px ${primaryColor})`\r\n    },\r\n    mediaQuery: {\r\n        mobileS: '320px',\r\n        mobileM: '375px',\r\n        mobileL: '425px',\r\n        tablet: '768px',\r\n        laptop: '1024px',\r\n        laptopL: '1440px',\r\n        fourK: '2560px',\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {store} from \"./App/store/store\";\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport {theme} from \"./styles/theme\";\nimport { GlobalStyles } from './styles/GlobalStyles';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <HashRouter>\n                <App/>\n            </HashRouter>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
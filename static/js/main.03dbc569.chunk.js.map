{"version":3,"sources":["components/common/Button/Button.tsx","App/routes/routes.ts","api/api.ts","helpers/helpers.ts","App/appReducer.ts","pages/Login/loginReducer.ts","styles/GlobalStyles.ts","components/common/SvgIcons/WorkersIcon.tsx","components/Header/Header.tsx","pages/WorkersTable/workersTableReducer.ts","components/common/InputText/InputText.tsx","components/common/RadioButtons/RadioButtons.tsx","components/Modal/ModalWindow.tsx","components/common/Loader/Loader.tsx","components/common/Loader/Loaders.tsx","components/TableMainRow/TableMainRow.tsx","components/Search/Search.tsx","pages/WorkersTable/WorkersTable.tsx","components/common/Checkbox/Checkbox.tsx","pages/Login/Login.tsx","pages/Registration/registrationReducer.ts","pages/Registration/Registration.tsx","pages/NotFound/NotFound.tsx","components/Main/Main.tsx","App/App.tsx","reportWebVitals.ts","App/store/store.ts","styles/theme.ts","index.tsx"],"names":["Button","restProps","StyledButton","styled","button","theme","color","primary","main","white","font","family","default","size","shadow","light","routes","instance","axios","create","baseURL","withCredentials","authApi","post","data","delete","workersApi","get","res","workers","id","put","_id","toast","status","message","Toast","success","fail","info","Error","appWatcher","authWorker","sagasAppActions","reducerActions","initialState","isAuth","isAppLoading","authUserData","email","modalStatus","modalType","isVisible","optionalData","type","appLoading","changeModalStatus","setUserData","userData","takeEvery","call","setIsLoggedIn","loginWatcher","loginWorker","logoutWorker","sagasLoginActions","isLoggedIn","action","payload","GlobalStyles","createGlobalStyle","source","MB","div","props","margin","AppContainer","mediaQuery","tablet","WorkersPanelIcon","finalIcon","icon","width","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","IconWrapper","Header","dispatch","useDispatch","useSelector","state","login","app","NavBarWrap","NavBar","UserInfoWrap","onClick","to","secondary","nav","workersWatcher","getWorkersWorker","deleteWorkerWorker","addWorkerWorker","updateWorkerWorker","sagasWorkersActions","isTableLoading","tableLoading","workerLoading","workerId","getWorkersSA","resp","workerData","v1","response","InputText","onChange","onChangeText","onKeyPress","onEnter","error","InputTextWrapper","StyledInput","e","currentTarget","value","key","StyledError","input","s1","RadioButtons","name","options","onChangeOption","mappedOptions","map","o","i","RadioContainer","Checkmark","label","grey","ModalWindow","initialWorkerData","updatingWorker","useEffect","documentClickHandler","modalForm","document","querySelector","path","includes","addEventListener","removeEventListener","fullName","contacts","gender","salary","position","isLoading","formik","useFormik","initialValues","onSubmit","values","updateWorkerSA","ModalForm","handleSubmit","data-form","IconWrap","ModalTitle","handleChange","onBlur","handleBlur","placeholder","RadioWrap","aria-labelledby","form","h3","Loader","useLoading","loading","indicator","containerProps","indicatorEl","LoaderWrapper","section","TableLoader","TableDataLoader","TableItemLoader","tr","TableMainRow","date","index","TableBodyRow","TableData","updated","Date","toLocaleDateString","year","month","day","TableDataUsePanel","td","Search","useState","searchVal","setSearchVal","SearchWrap","SearchInputWrap","SearchIconWrap","onInput","trim","matchedWorkers","filter","w","toLowerCase","indexOf","WorkersTable","MainTable","TableTitle","TablePanelWrap","TableWrapper","Table","TableHeaderRow","table","h1","Checkbox","children","StyledLabel","Login","password","rememberMe","validate","errors","length","test","inputValidation","fieldType","touched","FormStyle","FormTitle","checked","registrationWatcher","registrationWorker","sagasRegistrationActions","isRegistered","Registration","registration","confirmPassword","StyledForm","NotFound","Main","exact","render","BigLoaderWrap","Overlay","App","isModalOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootWatcher","rootReducer","combineReducers","LOGIN","SET_WORKERS","DELETE_WORKER","ADD_WORKER","UPDATE_WORKER","SET_FILTERED_WORKERS","TABLE_LOADING","WORKER_LOADING","AUTH","MODAL_STATUS","APP_LOADING","SET_USER_DATA","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","all","run","primaryColor","secondaryColor","variable","headerHeight","lighten","dark","darken","100","200","300","400","500","600","700","800","900","black","montserrat","s3","s2","b1","b2","b3","b4","b5","0","1","2","3","4","effect","glow","mobileS","mobileM","mobileL","laptop","laptopL","fourK","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03dbc569.chunk.js","sourcesContent":["import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\r\nimport { ThemeType } from \"../../../styles/theme\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype PropsType = DefaultButtonPropsType;\r\n\r\nexport const Button: React.FC<PropsType> = ({ ...restProps }) => {\r\n    return <StyledButton {...restProps} />;\r\n};\r\n\r\n// Styles\r\nconst StyledButton = styled.button<StyledComponentProps<any, ThemeType, any, any>>`\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.color.primary.main};\r\n  color: ${({ theme }) => theme.color.white};\r\n  padding: 0.5rem 1rem;\r\n\r\n  font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n  font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n  box-shadow: ${({ theme }) => theme.shadow[3]};\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.primary.light};\r\n  }\r\n`;\r\n","type RoutesT = {\r\n    main: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n}\r\n\r\nexport const routes: RoutesT = {\r\n    main: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n}","import axios, { AxiosResponse } from \"axios\";\nimport { NewWorkerT, WorkersT } from \"../pages/WorkersTable/workersTableReducer\";\n\nconst instance = axios.create({\n    baseURL: \"https://workers-panel.herokuapp.com/\",\n    withCredentials: true\n});\n\nexport type RegistrationDataT = {\n    email: string;\n    password: string;\n};\n\nexport type LoginDataT = RegistrationDataT & {\n    rememberMe: boolean;\n};\n\n\n\nexport type LoginRespT = {\n    data: {\n        email: string;\n        id: string;\n        rememberMe: boolean;\n    };\n};\n\nexport type AuthRespT = {\n    data: {\n        email: string;\n        _id: string;\n    };\n};\n\n\n\nexport type GetWorkersRespT = {\n    count: number;\n    workers: Array<WorkersT>;\n};\n\nexport type MessageRespT = {\n    resultCode: number;\n    message: string;\n};\n\n\nexport const authApi = {\n    async me() {\n        return await instance.post<AxiosResponse<AuthRespT>>(\"auth/me\");\n    },\n\n    async registration(data: RegistrationDataT) {\n        return await instance.post<AxiosResponse<MessageRespT>>(\"auth/register\", data);\n    },\n\n    async login(data: LoginDataT) {\n        return await instance.post<AxiosResponse<LoginRespT>>(\"auth/login\", data);\n    },\n\n    async logout() {\n        return await instance.delete<AxiosResponse<MessageRespT>>(\"auth/logout\");\n    }\n};\n\nexport const workersApi = {\n    async getWorkers() {\n        const res = await instance.get<AxiosResponse<GetWorkersRespT>>(\"workers\");\n        return res.data.data.workers;\n    },\n    async deleteWorker(id: string) {\n        return await instance.delete<AxiosResponse<MessageRespT>>(`workers/${id}`);\n    },\n    async addWorker(data: NewWorkerT) {\n        return await instance.post<AxiosResponse<MessageRespT>>(`workers`, data);\n    },\n\n    async updateWorker(data: WorkersT) {\n        return await instance.put<AxiosResponse<MessageRespT>>(`workers/${data._id}`, data);\n    }\n};","import Toast from \"light-toast\";\r\n\r\nexport const formatDate = (date: string) => {\r\n    return new Date(date).toLocaleDateString(\"ru\", {\r\n        year: \"2-digit\",\r\n        month: \"2-digit\",\r\n        day: \"numeric\"\r\n    });\r\n};\r\n\r\nexport const toast = (status: \"success\" | \"fail\" | \"loading\" | \"info\", message: string) => {\r\n    switch (status) {\r\n        case \"success\":\r\n            Toast.success(message, 2000);\r\n            break;\r\n        case \"fail\":\r\n            Toast.fail(message, 2000);\r\n            break;\r\n        case \"info\":\r\n            Toast.info(message, 2000);\r\n            break;\r\n        default:\r\n            throw new Error(\"Invoked without params\");\r\n    }\r\n};\r\n","// * Types\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { authApi, AuthRespT } from \"../api/api\";\r\nimport { setIsLoggedIn } from \"../pages/Login/loginReducer\";\r\nimport { WorkersT } from \"../pages/WorkersTable/workersTableReducer\";\r\nimport { toast } from \"../helpers/helpers\";\r\n\r\ntype ActionsT = ReturnType<typeof isAuth> | ReturnType<typeof changeModalStatus> | ReturnType<typeof appLoading> | ReturnType<typeof setUserData>;\r\n\r\nexport type ModalStatusT = {\r\n    modalType?: \"add\" | \"update\";\r\n    optionalData: WorkersT;\r\n    isVisible: boolean;\r\n};\r\n\r\nexport type AuthUserDataT = {\r\n    email: string,\r\n    id: string\r\n};\r\n\r\nexport type InitialStateT = {\r\n    isAuth: boolean;\r\n    isAppLoading: boolean;\r\n    modalStatus: ModalStatusT;\r\n    authUserData: AuthUserDataT;\r\n};\r\n\r\n// * Actions\r\nconst sagasAppActions = {\r\n    AUTH: \"SAGA/APP/AUTH\"\r\n};\r\n\r\nconst reducerActions = {\r\n    AUTH: \"appReducer/AUTH\" as const,\r\n    MODAL_STATUS: \"appReducer/MODAL_STATUS\" as const,\r\n    APP_LOADING: \"appReducer/APP_LOADING\" as const,\r\n    SET_USER_DATA: \"appReducer/SET_USER_DATA\" as const\r\n};\r\n\r\n// * Reducer\r\nconst initialState: InitialStateT = {\r\n    isAuth: false,\r\n    isAppLoading: false,\r\n    authUserData: {\r\n        email: \"\",\r\n        id: \"\"\r\n    },\r\n    modalStatus: {\r\n        modalType: \"add\",\r\n        isVisible: false,\r\n        optionalData: {} as WorkersT\r\n    }\r\n};\r\n\r\nexport const appReducer = (state = initialState, action: ActionsT): InitialStateT => {\r\n    const { AUTH, MODAL_STATUS, APP_LOADING, SET_USER_DATA } = reducerActions;\r\n\r\n    switch (action.type) {\r\n        case AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.status\r\n            };\r\n        }\r\n        case MODAL_STATUS: {\r\n            const { isVisible, modalType, optionalData } = action.modalStatus;\r\n            return {\r\n                ...state,\r\n                modalStatus: { ...state.modalStatus, isVisible, modalType, optionalData: optionalData }\r\n            };\r\n        }\r\n        case APP_LOADING: {\r\n            return {\r\n                ...state,\r\n                isAppLoading: action.status\r\n            };\r\n        }\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                authUserData: {...state.authUserData, email: action.userData.email, id: action.userData.id}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// * AC\r\nexport const isAuth = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.AUTH,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const appLoading = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.APP_LOADING,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const changeModalStatus = (modalStatus: ModalStatusT) => {\r\n    return {\r\n        type: reducerActions.MODAL_STATUS,\r\n        modalStatus\r\n    } as const;\r\n};\r\n\r\nexport const setUserData = (userData: AuthUserDataT) => {\r\n    return {\r\n        type: reducerActions.SET_USER_DATA,\r\n        userData\r\n    } as const;\r\n};\r\n\r\n// * Sagas\r\nexport function* appWatcher() {\r\n    yield takeEvery(sagasAppActions.AUTH, authWorker);\r\n}\r\n\r\nexport function* authWorker() {\r\n    yield put(appLoading(true));\r\n    try {\r\n        const res: AxiosResponse<AuthRespT> = yield call(authApi.me);\r\n        const {email, _id} = res.data.data;\r\n        yield put(isAuth(true));\r\n        yield put(setUserData({email, id: _id}));\r\n        yield put(setIsLoggedIn(true));\r\n        yield put(appLoading(false));\r\n        yield call(toast, \"success\", `Welcome, ${res.data.data.email}`);\r\n    } catch (err) {\r\n        yield call(toast, \"info\", \"Please login or create a new account!\");\r\n        yield put(isAuth(false));\r\n        yield put(appLoading(false));\r\n    }\r\n}\r\n\r\nexport const authSA = () => ({ type: sagasAppActions.AUTH });\r\n","// * Types\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport {authApi, LoginDataT, LoginRespT, MessageRespT} from \"../../api/api\";\nimport { AxiosResponse } from \"axios\";\nimport { toast } from \"../../helpers/helpers\";\nimport {setUserData} from \"../../App/appReducer\";\n\ntype ActionsT = ReturnType<typeof setIsLoggedIn>;\n\ntype InitialStateT = {\n    isLoggedIn: boolean;\n};\n\n// * Actions\nconst sagasLoginActions = {\n    LOGIN: \"SAGA/LOGIN/LOGIN\",\n    LOGOUT: \"SAGA/LOGIN/LOGOUT\"\n};\n\nconst reducerActions = {\n    LOGIN: \"loginReducer/LOGIN_STATUS\" as const\n};\n\n// * Reducer\nconst initialState: InitialStateT = {\n    isLoggedIn: false\n};\n\nexport const loginReducer = (state = initialState, action: ActionsT): InitialStateT => {\n    const { LOGIN } = reducerActions;\n\n    switch (action.type) {\n        case LOGIN: {\n            return {\n                ...state,\n                isLoggedIn: action.status\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// * AC\nexport const setIsLoggedIn = (status: boolean) => {\n    return {\n        type: reducerActions.LOGIN,\n        status\n    };\n};\n\n// * Sagas\nexport function* loginWatcher() {\n    yield takeEvery(sagasLoginActions.LOGIN, loginWorker);\n    yield takeEvery(sagasLoginActions.LOGOUT, logoutWorker);\n}\n\nexport function* loginWorker(action: ReturnType<typeof loginSA>) {\n    try {\n        const res: AxiosResponse<LoginRespT> = yield call(authApi.login, action.payload);\n        const {email, id} = res.data.data;\n        yield put(setIsLoggedIn(true));\n        yield put(setUserData({email, id}));\n        yield call(toast, \"success\", `Nice to see you, ${res.data.data.email}`);\n    } catch (err) {\n        yield put(setIsLoggedIn(false));\n        yield call(toast, \"fail\", err.message);\n    }\n}\n\nexport const loginSA = (payload: LoginDataT) =>\n    ({\n        type: sagasLoginActions.LOGIN,\n        payload\n    } as const);\n\nexport function* logoutWorker() {\n    try {\n        const res: AxiosResponse<MessageRespT> = yield call(authApi.logout);\n        yield put(setUserData({email: \"\", id: \"\"}));\n        yield put(setIsLoggedIn(false));\n        yield call(toast, \"success\", res.data.message);\n    } catch (err) {\n        yield call(toast, \"fail\", err.message);\n        yield put(setIsLoggedIn(true));\n    }\n}\n\nexport const logoutSA = () =>\n    ({\n        type: sagasLoginActions.LOGOUT\n    } as const);\n","import { createGlobalStyle } from \"styled-components/macro\";\r\nimport { ThemeType } from \"./theme\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle<{ theme: ThemeType }>`\r\n  // Import the font link into the project\r\n  @import url('${({ theme }) => theme.font.source}');\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  *:focus {\r\n    outline: none;\r\n  }\r\n  *::selection {\r\n  }\r\n  html,\r\n  body {\r\n    height: 100%;\r\n  }\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n  h1 {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  body {\r\n    font-family: ${({ theme }) => theme.font.family.default}; // Make a default font actually default\r\n    font-size: ${({ theme }) => theme.font.size.default}; // Default font size\r\n    font-weight: 500;\r\n    color: #000;\r\n  }\r\n  ul,\r\n  li {\r\n    list-style: none;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    display: block;\r\n  }\r\n  button,\r\n  input {\r\n    outline: none;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n  textarea {\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nexport const MB = styled.div<any>`\r\n    margin-bottom: ${props => props.margin};\r\n`\r\n\r\nexport const AppContainer = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  padding: 20px;\r\n  \r\n  @media(max-width: ${({theme}) => theme.mediaQuery.tablet}) {\r\n    padding: 10px;\r\n  }\r\n`;","import React, { HTMLAttributes } from \"react\";\nimport { DetailedHTMLProps } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype WorkersPanelIconT = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    icon: \"add\" | \"update\" | \"delete\" | \"close\" | \"search\" | \"user\";\n    width: \"10\" | \"20\" | \"30\" | \"40\" | \"50\" | \"60\" | \"70\" | \"80\" | \"90\" | \"100\";\n};\n\nexport const WorkersPanelIcon = (props: WorkersPanelIconT) => {\n    const { icon, width, ...restProps } = props;\n    let finalIcon;\n\n    switch (icon) {\n        case \"add\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user-plus\"\n                    className=\"svg-inline--fa fa-user-plus fa-w-20\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 640 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#12b110\"\n                        d=\"M624 208h-64v-64c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v64h-64c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h64v64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16v-64h64c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"update\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"pen\"\n                    className=\"svg-inline--fa fa-pen fa-w-16\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec9c0a\"\n                        d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"delete\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user-minus\"\n                    className=\"svg-inline--fa fa-user-minus fa-w-20\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 640 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec0a0a\"\n                        d=\"M624 208H432c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h192c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zm-400 48c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"close\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"times\"\n                    className=\"svg-inline--fa fa-times fa-w-11\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 352 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#ec0a0a\"\n                        d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"search\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"search\"\n                    className=\"svg-inline--fa fa-search fa-w-16\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#4579db\"\n                        d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        case \"user\":\n            finalIcon = (\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"user\"\n                    className=\"svg-inline--fa fa-user fa-w-14\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 448 512\"\n                    width={width}\n                >\n                    <path\n                        fill=\"#4579db\"\n                        d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n                    ></path>\n                </svg>\n            );\n            break;\n        default:\n            throw new Error('Please choose icon type => \"add\" | \"update\" | \"delete\"');\n    }\n\n    return <IconWrapper {...restProps}>{finalIcon}</IconWrapper>;\n};\n\nconst IconWrapper = styled.div<any>`\n    cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport {Button} from \"../common/Button/Button\";\nimport {routes} from \"../../App/routes/routes\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateT} from \"../../App/store/store\";\nimport {logoutSA} from \"../../pages/Login/loginReducer\";\nimport {AppContainer} from \"../../styles/GlobalStyles\";\nimport {WorkersPanelIcon} from \"../common/SvgIcons/WorkersIcon\";\nimport {AuthUserDataT} from \"../../App/appReducer\";\n\nexport const Header = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n    const authUserData = useSelector<RootStateT, AuthUserDataT>((state) => state.app.authUserData);\n\n    const logOutHandler = () => dispatch(logoutSA());\n\n    return (\n        <NavBarWrap>\n            <AppContainer>\n                <NavBar>\n                    {isLoggedIn ? (\n                        <>\n                            <UserInfoWrap>\n                                <WorkersPanelIcon icon={\"user\"} width={\"20\"}/>\n                                <div>{authUserData.email}</div>\n                            </UserInfoWrap>\n                            <Button onClick={logOutHandler}>Logout</Button>\n                        </>\n                    ) : (\n                        <NavLink to={routes.login}>\n                            <Button>Login</Button>\n                        </NavLink>\n                    )}\n                    {isLoggedIn || (\n                        <NavLink to={routes.registration}>\n                            <Button>Sing in</Button>\n                        </NavLink>\n                    )}\n                </NavBar>\n            </AppContainer>\n        </NavBarWrap>\n    );\n};\n\nconst NavBarWrap = styled.div`\n  background-color: ${({theme}) => theme.color.secondary.main};\n`;\n\nconst NavBar = styled.nav`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 50px;\n\n  & > a {\n    margin-right: 15px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst UserInfoWrap = styled.div`\n  margin-right: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & > div:first-child {\n    margin-right: 10px;\n  }\n`;\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { MessageRespT, workersApi } from \"../../api/api\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { v1 } from \"uuid\";\r\nimport { toast } from \"../../helpers/helpers\";\r\n\r\n// * Types\r\n\r\nexport type NewWorkerT = {\r\n    fullName: string;\r\n    gender: \"male\" | \"female\";\r\n    contacts: string;\r\n    salary: string;\r\n    position: string;\r\n};\r\n\r\nexport type WorkersT = NewWorkerT & {\r\n    _id?: string;\r\n    updated?: string;\r\n    isLoading: boolean;\r\n};\r\n\r\ntype ActionsT =\r\n    | ReturnType<typeof setWorkers>\r\n    | ReturnType<typeof deleteWorker>\r\n    | ReturnType<typeof addWorker>\r\n    | ReturnType<typeof updateWorker>\r\n    | ReturnType<typeof setFilteredWorkers>\r\n    | ReturnType<typeof tableLoading>\r\n    | ReturnType<typeof workerLoading>;\r\n\r\ntype InitialStateT = {\r\n    workers: Array<WorkersT>;\r\n    isTableLoading: boolean;\r\n};\r\n\r\n// * Actions\r\nconst sagasWorkersActions = {\r\n    GET_WORKERS: \"SAGA/WORKERS/GET_WORKERS\" as const,\r\n    DELETE_WORKER: \"SAGA/WORKERS/DELETE_WORKER\" as const,\r\n    ADD_WORKER: \"SAGA/WORKERS/ADD_WORKER\" as const,\r\n    UPDATE_WORKER: \"SAGA/WORKERS/UPDATE_WORKER\" as const\r\n};\r\nconst reducerActions = {\r\n    SET_WORKERS: \"workersTableReducer/SET_WORKERS\" as const,\r\n    DELETE_WORKER: \"workersTableReducer/DELETE_WORKER\" as const,\r\n    ADD_WORKER: \"workersTableReducer/ADD_WORKER\" as const,\r\n    UPDATE_WORKER: \"workersTableReducer/UPDATE_WORKER\" as const,\r\n    SET_FILTERED_WORKERS: \"workersTableReducer/SET_FILTERED_WORKERS\" as const,\r\n    TABLE_LOADING: \"workersTableReducer/TABLE_LOADING\" as const,\r\n    WORKER_LOADING: \"workersTableReducer/WORKER_LOADING\" as const\r\n};\r\n\r\n// * reducer\r\nconst initialState: InitialStateT = {\r\n    workers: [] as Array<WorkersT>,\r\n    isTableLoading: false\r\n};\r\n\r\nexport const workersTableReducer = (state = initialState, action: ActionsT): InitialStateT => {\r\n    const {\r\n        SET_WORKERS,\r\n        DELETE_WORKER,\r\n        ADD_WORKER,\r\n        UPDATE_WORKER,\r\n        SET_FILTERED_WORKERS,\r\n        TABLE_LOADING,\r\n        WORKER_LOADING\r\n    } = reducerActions;\r\n    switch (action.type) {\r\n        case SET_WORKERS: {\r\n            return {\r\n                ...state,\r\n                workers: action.payload.map((w) => ({ ...w, isLoading: false }))\r\n            };\r\n        }\r\n        case SET_FILTERED_WORKERS: {\r\n            return {\r\n                ...state,\r\n                workers: [...action.workerData]\r\n            };\r\n        }\r\n        case ADD_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: [...state.workers, { ...action.workerData, isLoading: false }]\r\n            };\r\n        }\r\n        case DELETE_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.filter((w) => w._id !== action.id)\r\n            };\r\n        }\r\n\r\n        case UPDATE_WORKER: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.map((w) =>\r\n                    w._id === action.workerData._id ? { ...w, ...action.workerData } : w\r\n                )\r\n            };\r\n        }\r\n        case TABLE_LOADING: {\r\n            return {\r\n                ...state,\r\n                isTableLoading: action.status\r\n            };\r\n        }\r\n        case WORKER_LOADING: {\r\n            return {\r\n                ...state,\r\n                workers: state.workers.map((w) => (w._id === action.workerId ? { ...w, isLoading: action.status } : w))\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// * AC\r\n\r\nexport const tableLoading = (status: boolean) => {\r\n    return {\r\n        type: reducerActions.TABLE_LOADING,\r\n        status\r\n    } as const;\r\n};\r\n\r\nexport const workerLoading = (status: boolean, workerId: string) => {\r\n    return {\r\n        type: reducerActions.WORKER_LOADING,\r\n        status,\r\n        workerId\r\n    } as const;\r\n};\r\n\r\nconst setWorkers = (payload: Array<WorkersT>) => {\r\n    return {\r\n        type: reducerActions.SET_WORKERS,\r\n        payload\r\n    } as const;\r\n};\r\n\r\nconst addWorker = (workerData: NewWorkerT) => {\r\n    return {\r\n        type: reducerActions.ADD_WORKER,\r\n        id: v1(),\r\n        workerData\r\n    } as const;\r\n};\r\n\r\nconst deleteWorker = (id: string) => {\r\n    return {\r\n        type: reducerActions.DELETE_WORKER,\r\n        id\r\n    } as const;\r\n};\r\n\r\nexport const updateWorker = (workerData: WorkersT) => {\r\n    return {\r\n        type: reducerActions.UPDATE_WORKER,\r\n        workerData\r\n    } as const;\r\n};\r\n\r\nexport const setFilteredWorkers = (workerData: Array<WorkersT>) => {\r\n    return {\r\n        type: reducerActions.SET_FILTERED_WORKERS,\r\n        workerData\r\n    } as const;\r\n};\r\n\r\n// * Sagas\r\nexport function* workersWatcher() {\r\n    yield takeEvery(sagasWorkersActions.GET_WORKERS, getWorkersWorker);\r\n    yield takeEvery(sagasWorkersActions.DELETE_WORKER, deleteWorkerWorker);\r\n    yield takeEvery(sagasWorkersActions.ADD_WORKER, addWorkerWorker);\r\n    yield takeEvery(sagasWorkersActions.UPDATE_WORKER, updateWorkerWorker);\r\n}\r\n\r\nfunction* getWorkersWorker() {\r\n    yield put(tableLoading(true));\r\n    try {\r\n        const workers: Array<WorkersT> = yield call(workersApi.getWorkers);\r\n        yield put(setWorkers(workers));\r\n        yield put(tableLoading(false));\r\n    } catch (err) {\r\n        yield call(toast, \"fail\", err.message);\r\n        yield put(tableLoading(false));\r\n    }\r\n}\r\n\r\nexport const getWorkersSA = () => {\r\n    return {\r\n        type: sagasWorkersActions.GET_WORKERS\r\n    } as const;\r\n};\r\n\r\nfunction* deleteWorkerWorker(action: ReturnType<typeof deleteWorkersSA>) {\r\n    try {\r\n        yield put(workerLoading(true, action.id));\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.deleteWorker, action.id);\r\n        yield put(deleteWorker(action.id));\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        yield put(workerLoading(false, action.id));\r\n        yield call(toast, \"fail\", err.message);\r\n    }\r\n}\r\n\r\nexport const deleteWorkersSA = (id: string) => {\r\n    return {\r\n        type: sagasWorkersActions.DELETE_WORKER,\r\n        id\r\n    } as const;\r\n};\r\n\r\nfunction* addWorkerWorker(action: ReturnType<typeof addWorkersSA>) {\r\n    try {\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.addWorker, action.payload);\r\n        yield put(addWorker(action.payload));\r\n        yield put(getWorkersSA());\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        yield call(toast, \"fail\", err.response.data.message);\r\n    }\r\n}\r\n\r\nexport const addWorkersSA = (payload: NewWorkerT) => {\r\n    return {\r\n        type: sagasWorkersActions.ADD_WORKER,\r\n        payload\r\n    } as const;\r\n};\r\n\r\nfunction* updateWorkerWorker(action: ReturnType<typeof updateWorkerSA>) {\r\n    try {\r\n        if(action.payload._id) yield put(workerLoading(true, action.payload._id));\r\n        const resp: AxiosResponse<MessageRespT> = yield call(workersApi.updateWorker, action.payload);\r\n        yield put(updateWorker(action.payload));\r\n        yield call(toast, \"success\", resp.data.message);\r\n    } catch (err) {\r\n        if(action.payload._id) yield put(workerLoading(false, action.payload._id));\r\n        yield call(toast, \"fail\", err.message);\r\n    }\r\n}\r\n\r\nexport const updateWorkerSA = (payload: WorkersT) => {\r\n    return {\r\n        type: sagasWorkersActions.UPDATE_WORKER,\r\n        payload\r\n    } as const;\r\n};\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\nimport styled, { StyledComponentProps } from \"styled-components/macro\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n};\n\nexport const InputText: React.FC<SuperInputTextPropsType> = ({\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n\n    ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && // если есть пропс onChange\n            onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    };\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" && // если нажата кнопка Enter\n            onEnter && // и есть пропс onEnter\n            onEnter(); // то вызвать его\n    };\n\n    return (\n        <InputTextWrapper>\n            <StyledInput\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <StyledError>{error && <span>{error}</span>}</StyledError>\n        </InputTextWrapper>\n    );\n};\n\nconst InputTextWrapper = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nconst StyledInput = styled.input<StyledComponentProps<any, any, any, any>>`\n    // Общие стили инпута\n\n    padding: 1rem 0.5rem;\n\n    height: 20px;\n    width: 100%;\n\n    font-size: ${({ theme }) => theme.font.size.default};\n    font-family: ${({ theme }) => theme.font.family.default};\n  box-shadow: ${({ theme }) => theme.shadow[3]};\n    border: 1px solid rgb(109, 109, 109);\n`;\n// Стили контейнера с ошибкой\nconst StyledError = styled.div`\n    position: absolute;\n    bottom: 1px;\n\n    // Стили текста ошибки\n    & > span {\n        font-size: ${({ theme }) => theme.font.size.s1};\n        color: red;\n    }\n`;\n","import React, { ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport styled from \"styled-components/macro\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype PropsType = DefaultRadioPropsType & {\n    options?: any[];\n    onChangeOption?: (option: any) => void;\n};\n\nexport const RadioButtons: React.FC<PropsType> = ({\n    type,\n    name,\n    options,\n    value,\n    onChange,\n    onChangeOption,\n    ...restProps\n}) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeOption) {\n            onChangeOption(e.currentTarget.value);\n        }\n    };\n\n    const mappedOptions: any[] = options\n        ? options.map((o, i) => (\n              <RadioContainer key={name + \"-\" + i}>\n                  <span>{o}</span>\n                  <input\n                      name={\"gender\"}\n                      type={\"radio\"}\n                      value={o}\n                      onChange={onChange}\n                      // checked={value === o}\n                      {...restProps}\n                  />\n                  <Checkmark className={\"checkmark\"} />\n              </RadioContainer>\n          ))\n        : [];\n\n    return <>{mappedOptions}</>;\n};\n\nconst RadioContainer = styled.label`\n    // The container\n    position: relative;\n\n    display: block;\n\n    padding-left: 25px;\n    padding-right: 15px;\n    margin-bottom: 12px;\n\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n    // Hide the browser's default radio button\n    & input {\n        position: absolute;\n\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    // On mouse-over, add a background color\n    &:hover input ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    }\n\n    // When the radio button is checked, add a blue background\n    & input:checked ~ .checkmark {\n        background-color: ${({ theme }) => theme.color.primary.main};\n    }\n\n    // Show the indicator (dot/circle) when checked\n    & input:checked ~ .checkmark:after {\n        display: block;\n    }\n\n    // Style the indicator (dot/circle)\n    & .checkmark:after {\n        top: 5px;\n        left: 5px;\n\n        width: 6px;\n        height: 6px;\n\n        border-radius: 50%;\n        background: ${({ theme }) => theme.color.white};\n    }\n`;\n\nconst Checkmark = styled.div`\n    // Create a custom radio button\n    position: absolute;\n    bottom: 2px;\n    left: 0;\n\n    height: 16px;\n    width: 16px;\n\n    background-color: ${({ theme }) => theme.color.grey[\"400\"]};\n    border-radius: 50%;\n\n    // Create the indicator (the dot/circle - hidden when not checked)\n    &:after {\n        content: \"\";\n        position: absolute;\n        display: none;\n    }\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { InputText } from \"../common/InputText/InputText\";\nimport { RadioButtons } from \"../common/RadioButtons/RadioButtons\";\nimport { Button } from \"../common/Button/Button\";\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { changeModalStatus } from \"../../App/appReducer\";\nimport { addWorkersSA, updateWorkerSA, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\nimport { MB } from \"../../styles/GlobalStyles\";\n\ntype ModalWindowPropsT = {\n    type?: \"add\" | \"update\";\n};\n\nexport const ModalWindow: React.FC<ModalWindowPropsT> = ({ type = \"add\", ...restProps }) => {\n    const dispatch = useDispatch();\n    const updatingWorker = useSelector<RootStateT, WorkersT>((state) => state.app.modalStatus.optionalData);\n\n    useEffect(() => {\n        const documentClickHandler = (e: any) => {\n            const modalForm = document.querySelector(\"[data-form]\");\n            if (!e.path.includes(modalForm)) {\n                dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\n            }\n        };\n        document.addEventListener(\"click\", documentClickHandler);\n        return () => {\n            document.removeEventListener(\"click\", documentClickHandler);\n        };\n    }, [dispatch]);\n\n    let initialWorkerData: WorkersT;\n\n    if (type === \"add\") {\n        initialWorkerData = {\n            fullName: \"\",\n            contacts: \"\",\n            gender: \"male\",\n            salary: \"\",\n            position: \"\",\n            isLoading: false\n        };\n    } else {\n        initialWorkerData = {\n            fullName: updatingWorker.fullName,\n            contacts: updatingWorker.contacts,\n            gender: updatingWorker.gender,\n            salary: updatingWorker.salary,\n            position: updatingWorker.position,\n            isLoading: false\n        };\n    }\n\n    const formik = useFormik({\n        initialValues: initialWorkerData,\n        onSubmit: (values) => {\n            if (type === \"add\") {\n                dispatch(addWorkersSA(values));\n            } else {\n                dispatch(updateWorkerSA({ ...updatingWorker, ...values }));\n            }\n\n            dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\n        }\n    });\n\n    const closeModalHandler = () => dispatch(changeModalStatus({ isVisible: false, optionalData: {} as WorkersT }));\n\n    return (\n        <ModalForm onSubmit={formik.handleSubmit} data-form={\"modal\"}>\n            <IconWrap>\n                <WorkersPanelIcon icon={\"close\"} width={\"20\"} onClick={closeModalHandler} />\n            </IconWrap>\n            <ModalTitle>{type === \"add\" ? \"Add new worker\" : \"Update worker data\"}</ModalTitle>\n            <MB margin={\"20px\"}>\n                <InputText\n                    type={\"name\"}\n                    value={formik.values.fullName}\n                    id={\"fullName\"}\n                    name={\"fullName\"}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    placeholder={\"Full name\"}\n                />\n            </MB>\n\n            <RadioWrap role=\"group\" aria-labelledby=\"my-radio-group\">\n                <RadioButtons\n                    options={[\"male\", \"female\"]}\n                    onChange={formik.handleChange}\n                    value={formik.initialValues.gender}\n                />\n            </RadioWrap>\n\n            <MB margin={\"20px\"}>\n                <InputText\n                    type={\"contacts\"}\n                    value={formik.values.contacts}\n                    id={\"contacts\"}\n                    name={\"contacts\"}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    placeholder={\"Contacts\"}\n                />\n            </MB>\n            <MB margin={\"20px\"}>\n                <InputText\n                    type={\"salary\"}\n                    value={formik.values.salary}\n                    id={\"salary\"}\n                    name={\"salary\"}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    placeholder={\"Salary\"}\n                />\n            </MB>\n            <MB margin={\"20px\"}>\n                <InputText\n                    type={\"position\"}\n                    value={formik.values.position}\n                    id={\"position\"}\n                    name={\"position\"}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    placeholder={\"Position\"}\n                />\n            </MB>\n\n            <Button type={\"submit\"}>{type === \"add\" ? \"Add\" : \"Update\"}</Button>\n        </ModalForm>\n    );\n};\n\nconst ModalForm = styled.form`\n    padding: 30px 20px;\n    width: 20%;\n    min-width: 280px;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: ${({ theme }) => theme.color.secondary.light};\n    z-index: 300;\n`;\n\nconst RadioWrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst IconWrap = styled.div`\n    position: absolute;\n    right: 5%;\n    top: 1%;\n`;\n\nconst ModalTitle = styled.h3`\n    margin-bottom: 10px;\n    text-align: center;\n`;\n","import React from \"react\";\r\nimport {Circles, useLoading} from '@agney/react-loading';\r\nimport styled from \"styled-components/macro\";\r\n\r\ntype LoaderPropsT = {\r\n    size: number\r\n    color?: string\r\n}\r\n\r\nexport function Loader(props: LoaderPropsT) {\r\n    const {containerProps, indicatorEl} = useLoading({\r\n        loading: true,\r\n        indicator: <Circles />,\r\n    });\r\n\r\n    return (\r\n        <LoaderWrapper {...containerProps} width={props.size} color={props.color ? props.color : \"#4579db\"}>\r\n            {indicatorEl}\r\n        </LoaderWrapper>\r\n    );\r\n}\r\n\r\nconst LoaderWrapper = styled.section<{width: number, color: string}>`\r\n    width: ${props => props.width + \"px\"};\r\n    color: ${props => props.color};\r\n`;","import {Loader} from \"./Loader\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const TableLoader = () => {\r\n    return(\r\n        <LoaderWrapper>\r\n            <td>\r\n                <Loader size={200} />\r\n            </td>\r\n        </LoaderWrapper>\r\n    )\r\n}\r\n\r\n\r\nexport const TableDataLoader = () => {\r\n    return (\r\n        <TableItemLoader>\r\n            <Loader size={25} color={\"#dbb145\"} />\r\n        </TableItemLoader>\r\n    );\r\n};\r\n\r\nconst TableItemLoader = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-10%);\r\n`;\r\n\r\n\r\nconst LoaderWrapper = styled.tr`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeModalStatus } from \"../../App/appReducer\";\nimport { deleteWorkersSA, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\nimport { formatDate } from \"../../helpers/helpers\";\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\nimport styled from \"styled-components/macro\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { Loader } from \"../common/Loader/Loader\";\nimport { TableDataLoader } from \"../common/Loader/Loaders\";\n\ntype TableMainRowPropsT = {\n    workerData: WorkersT;\n    index: number;\n};\n\nexport const TableMainRow: React.FC<TableMainRowPropsT> = ({ workerData, index, ...restProps }) => {\n    const dispatch = useDispatch();\n\n    const updateWorker = () => {\n        dispatch(changeModalStatus({ isVisible: true, modalType: \"update\", optionalData: workerData }));\n    };\n\n    const deleteWorker = () => {\n        workerData._id && dispatch(deleteWorkersSA(workerData._id));\n    };\n\n    return (\n        <TableBodyRow>\n            <TableData>{index}</TableData>\n            <TableData>{workerData.fullName}</TableData>\n            <TableData>{workerData.gender}</TableData>\n            <TableData>{workerData.contacts}</TableData>\n            <TableData>{workerData.updated && formatDate(workerData.updated)}</TableData>\n            <TableData>{workerData.salary}</TableData>\n            <TableData>{workerData.position}</TableData>\n            <TableDataUsePanel>\n                {workerData.isLoading ? (\n                    <TableDataLoader />\n                ) : (\n                    <>\n                        <WorkersPanelIcon icon={\"delete\"} width={\"20\"} onClick={deleteWorker} />\n                        <WorkersPanelIcon icon={\"update\"} width={\"20\"} onClick={updateWorker} />\n                    </>\n                )}\n            </TableDataUsePanel>\n        </TableBodyRow>\n    );\n};\n\n\n\nconst TableBodyRow = styled.tr`\n    transition: all 0.2s ease;\n\n    &:nth-child(even) {\n        background-color: ${({ theme }) => theme.color.primary.light};\n    }\n\n    &:hover {\n        background-color: ${({ theme }) => theme.color.secondary.light};\n    }\n`;\nconst TableData = styled.td`\n    text-align: center;\n    padding: 10px 0;\n`;\n\nconst TableDataUsePanel = styled.td`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 10px 0;\n\n    & > div {\n        margin-right: 5px;\n\n        &:last-child {\n            margin-right: 0;\n        }\n    }\n`;\n\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { getWorkersSA, setFilteredWorkers, WorkersT } from \"../../pages/WorkersTable/workersTableReducer\";\nimport React, { FormEvent, useState } from \"react\";\nimport { WorkersPanelIcon } from \"../common/SvgIcons/WorkersIcon\";\nimport { InputText } from \"../common/InputText/InputText\";\nimport styled from \"styled-components/macro\";\n\nexport const Search = () => {\n    const dispatch = useDispatch();\n    const workers = useSelector<RootStateT, Array<WorkersT>>((state) => state.workers.workers);\n    const [searchVal, setSearchVal] = useState<string>(\"\");\n\n    const searchWorkers = (e: FormEvent<HTMLInputElement>) => {\n        const { value } = e.currentTarget;\n        setSearchVal(value);\n\n        if (!value.trim()) {\n            dispatch(getWorkersSA());\n        } else {\n            const matchedWorkers = workers.filter((w) => w.fullName.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n            dispatch(setFilteredWorkers(matchedWorkers));\n        }\n    };\n\n    return (\n        <SearchWrap>\n            <SearchInputWrap>\n                <SearchIconWrap>\n                    <WorkersPanelIcon icon={\"search\"} width={\"20\"} />\n                </SearchIconWrap>\n                <InputText value={searchVal} type={\"search\"} placeholder={\"Search by name...\"} onInput={searchWorkers} />\n            </SearchInputWrap>\n        </SearchWrap>\n    );\n};\n\nconst SearchWrap = styled.div`\n    width: 20%;\n    position: relative;\n`;\n\nconst SearchIconWrap = styled.div`\n    position: absolute;\n    top: 50%;\n    right: 2%;\n    transform: translateY(-50%);\n    z-index: 100;\n`;\n\nconst SearchInputWrap = styled.div`\n  position: relative;\n    min-width: 200px;\n`;\n\n\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { routes } from \"../../App/routes/routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootStateT } from \"../../App/store/store\";\nimport styled from \"styled-components/macro\";\nimport { getWorkersSA, WorkersT } from \"./workersTableReducer\";\nimport { WorkersPanelIcon } from \"../../components/common/SvgIcons/WorkersIcon\";\nimport { ModalWindow } from \"../../components/Modal/ModalWindow\";\nimport { v1 } from \"uuid\";\nimport { changeModalStatus, ModalStatusT } from \"../../App/appReducer\";\nimport { TableMainRow } from \"../../components/TableMainRow/TableMainRow\";\nimport { Search } from \"../../components/Search/Search\";\nimport { Loader } from \"../../components/common/Loader/Loader\";\nimport { TableLoader } from \"../../components/common/Loader/Loaders\";\n\nexport const WorkersTable = () => {\n    const dispatch = useDispatch();\n    const modalStatus = useSelector<RootStateT, ModalStatusT>((state) => state.app.modalStatus);\n\n    useEffect(() => {\n        dispatch(getWorkersSA());\n    }, [dispatch]);\n\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n    const workers = useSelector<RootStateT, Array<WorkersT>>((state) => state.workers.workers);\n    const isTableLoading = useSelector<RootStateT, boolean>((state) => state.workers.isTableLoading);\n\n    if (!isLoggedIn) {\n        return <Redirect to={routes.login} />;\n    }\n\n    const addWorker = () =>\n        dispatch(\n            changeModalStatus({\n                isVisible: true,\n                modalType: \"add\",\n                optionalData: {} as WorkersT\n            })\n        );\n\n    return (\n        <MainTable>\n            <TableTitle>Workers Table</TableTitle>\n\n            <TablePanelWrap>\n                <WorkersPanelIcon icon={\"add\"} width={\"30\"} onClick={addWorker} />\n                <Search />\n            </TablePanelWrap>\n\n            <TableWrapper>\n                <Table>\n                    <thead>\n                        <TableHeaderRow>\n                            <th>#</th>\n                            <th>Full Name</th>\n                            <th>gender</th>\n                            <th>contacts</th>\n                            <th>updated</th>\n                            <th>salary</th>\n                            <th>position</th>\n                            <th></th>\n                        </TableHeaderRow>\n                    </thead>\n                    <tbody>\n                        {isTableLoading ? (\n                            <TableLoader />\n                        ) : (\n                            workers.map((w, i) => {\n                                return <TableMainRow workerData={w} index={i} key={w._id ? w._id : v1()} />;\n                            })\n                        )}\n                    </tbody>\n                </Table>\n                {modalStatus.isVisible && <ModalWindow type={modalStatus.modalType} />}\n            </TableWrapper>\n        </MainTable>\n    );\n};\n\nconst MainTable = styled.div``;\n\nconst TableWrapper = styled.div`\n    overflow-x: auto;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 0 auto;\n  border-collapse: collapse;\n  box-shadow: ${({theme}) => theme.shadow[5]};\n  border: 1px solid rgba(146, 141, 141, 0.7);\n`;\n\nconst TablePanelWrap = styled.div`\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n\n    & > * {\n        margin-right: 20px;\n    }\n`;\nconst TableTitle = styled.h1`\n    margin-bottom: 20px;\n    text-align: center;\n`;\n\nconst TableHeaderRow = styled.tr`\n    background-color: ${({ theme }) => theme.color.secondary.main};\n\n    & > th {\n        padding: 20px;\n    }\n`;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nexport const Checkbox: React.FC<PropsType> = (props) => {\r\n    const { type, onChange, children, ...restProps } = props;\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange(e);\r\n    };\r\n\r\n    return (\r\n        <StyledLabel>\r\n            <input type={\"checkbox\"} onChange={onChangeCallback} {...restProps} />\r\n            <span>{children}</span>\r\n        </StyledLabel>\r\n    );\r\n};\r\n\r\n// Styles\r\nconst StyledLabel = styled.label<any>`\r\n    // Общие стили чекбокса\r\n    cursor: pointer;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    // Стили для элемента input c type=\"checkbox\". Тут убираеться дефолтный чекбокс\r\n    & > input {\r\n        position: absolute;\r\n        z-index: -1;\r\n        opacity: 0;\r\n    }\r\n\r\n    // Стили для текста чекбокса\r\n    & > span {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        user-select: none;\r\n    }\r\n\r\n    // Стили коробки (кнопки) чекбокса\r\n    & > span::before {\r\n        content: \"\";\r\n        display: inline-block;\r\n        width: 16px;\r\n        height: 16px;\r\n        flex-shrink: 0;\r\n        flex-grow: 0;\r\n        border: 1px solid ${({ theme }) => theme.color.grey[\"500\"]};\r\n        margin-right: 0.5em;\r\n        background-repeat: no-repeat;\r\n        background-position: center center;\r\n        background-size: 50% 50%;\r\n    }\r\n\r\n    // стили при наведении курсора на checkbox\r\n    & > input:not(:disabled):not(:checked) + span:hover::before {\r\n        border-color: ${({ theme }) => theme.color.grey[\"500\"]}; // 183\r\n    }\r\n\r\n    // стили для активного чекбокса (при нажатии на него)\r\n    & > input:not(:disabled):active + span::before {\r\n        background-color: ${({ theme }) => theme.color.grey[\"500\"]};\r\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в фокусе\r\n    & > input:focus + span::before {\r\n        box-shadow: ${({ theme }) => theme.shadow[\"0\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в фокусе и не находящегося в состоянии checked\r\n    & > input:focus:not(:checked) + span::before {\r\n        border-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в состоянии checked\r\n    & > input:checked + span::before {\r\n        border-color: ${({ theme }) => theme.color.primary.main};\r\n        background-color: ${({ theme }) => theme.color.primary.main};\r\n        background-size: 65% 65%;\r\n        background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\");\r\n    }\r\n\r\n    // стили для чекбокса, находящегося в состоянии disabled\r\n    & > input:disabled + span::before {\r\n        background-color: ${({ theme }) => theme.color.grey[\"700\"]};\r\n    }\r\n`;\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype PropsType = DefaultInputPropsType & {\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n    children: string; // Checkbox text\r\n};\r\n","import React from \"react\";\nimport { InputText } from \"../../components/common/InputText/InputText\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport { Checkbox } from \"../../components/common/Checkbox/Checkbox\";\nimport styled from \"styled-components/macro\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { routes } from \"../../App/routes/routes\";\nimport { loginSA } from \"./loginReducer\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { MB } from \"../../styles/GlobalStyles\";\n\nexport type LoginFormT = {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n};\n\nexport const Login = () => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector<RootStateT, boolean>((state) => state.login.isLoggedIn);\n\n    const validate = (values: LoginFormT) => {\n        const errors: LoginFormT = {} as LoginFormT;\n        if (!values.password) {\n            errors.password = \"Required\";\n        } else if (values.password.length < 5) {\n            errors.password = \"Must be 5 characters or more\";\n        }\n\n        if (!values.email) {\n            errors.email = \"Required\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n        } else if (values.email.length > 50) {\n            errors.email = \"Your email is too long :-(\";\n        }\n\n        return errors;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\" || \"yehor@gmail.com\",\n            password: \"\" || \"yehor123\",\n            rememberMe: false\n        },\n        validate,\n        onSubmit: (values) => {\n            dispatch(loginSA(values));\n        }\n    });\n\n    const inputValidation = (fieldType: \"password\" | \"email\"): string => {\n        return formik.touched[fieldType] && formik.errors[fieldType] ? `${formik.errors[fieldType]}` : \"\";\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to={routes.main} />;\n    }\n\n    return (\n        <>\n            <div>\n                <FormStyle onSubmit={formik.handleSubmit}>\n                    {/*{isFormPending && (*/}\n                    {/*    <Overlay>*/}\n                    {/*        <span>Loading...</span>*/}\n                    {/*    </Overlay>*/}\n                    {/*)}*/}\n                    <FormTitle>Login</FormTitle>\n\n                    <MB margin={\"20px\"}>\n                        <InputText\n                            type={\"email\"}\n                            value={formik.values.email}\n                            id={\"email\"}\n                            name={\"email\"}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            placeholder={\"Email\"}\n                            error={inputValidation(\"email\")}\n                        />\n                    </MB>\n                    <MB margin={\"20px\"}>\n                        <InputText\n                            type={\"password\"}\n                            value={formik.values.password}\n                            name={\"password\"}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            placeholder={\"Password\"}\n                            error={inputValidation(\"password\")}\n                        />\n                    </MB>\n\n                    <MB margin={\"20px\"}>\n                        <Checkbox checked={formik.values.rememberMe} onChange={formik.handleChange} name={\"rememberMe\"}>\n                            Remember me\n                        </Checkbox>\n                    </MB>\n                    <Button type={\"submit\"}>Login</Button>\n                    <NavLink to={routes.registration}>Registration</NavLink>\n                </FormStyle>\n            </div>\n        </>\n    );\n};\n\nconst FormStyle = styled.form`\n    margin: 0 auto;\n    padding: 10px 15px;\n    width: 30%;\n    min-width: 300px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n    background-color: ${({ theme }) => theme.color.secondary.light};\n    box-shadow: ${({ theme }) => theme.shadow[3]};\n\n`;\n\nexport const FormTitle = styled.h3`\n    margin-bottom: 20px;\n`;\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #267fd457;\n    backdrop-filter: blur(5px);\n    z-index: 10;\n\n    & > span {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -100%);\n    }\n`;\n","// * Types\nimport { call, put, takeEvery } from \"redux-saga/effects\";\nimport {authApi, MessageRespT, RegistrationDataT} from \"../../api/api\";\nimport { AxiosResponse } from \"axios\";\nimport { toast } from \"../../helpers/helpers\";\n\ntype ActionsT = ReturnType<typeof isRegistered>;\n\ntype InitialStateT = {\n    isRegistered: boolean;\n};\n\n//* Actions\nconst reducerActions = {\n    REGISTERED_STATUS: \"registrationReducer/REGISTERED_STATUS\" as const\n};\n\nconst sagasRegistrationActions = {\n    REGISTRATION: \"SAGA/REGISTRATION/REGISTRATION\"\n};\n\n// * reducer\nconst initialState: InitialStateT = {\n    isRegistered: false\n};\n\nexport const registrationReducer = (state = initialState, action: ActionsT): InitialStateT => {\n    switch (action.type) {\n        case reducerActions.REGISTERED_STATUS: {\n            return {\n                ...state,\n                isRegistered: action.status\n            };\n        }\n        default:\n            return state;\n    }\n};\n\n// * AC\nconst isRegistered = (status: boolean) => {\n    return {\n        type: reducerActions.REGISTERED_STATUS,\n        status\n    };\n};\n\n// * saga\nexport function* registrationWatcher() {\n    yield takeEvery(sagasRegistrationActions.REGISTRATION, registrationWorker);\n}\n\nfunction* registrationWorker(action: ReturnType<typeof registrationSA>) {\n    try {\n        const res: AxiosResponse<MessageRespT> = yield call(authApi.registration, action.payload);\n        yield call(toast, \"success\", res.data.message);\n        yield put(isRegistered(true));\n    } catch (err) {\n        yield call(toast, \"fail\", err.message);\n        yield put(isRegistered(false));\n    }\n}\n\nexport const registrationSA = (payload: RegistrationDataT) => {\n    return {\n        type: sagasRegistrationActions.REGISTRATION,\n        payload\n    } as const;\n};\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button } from \"../../components/common/Button/Button\";\nimport styled from \"styled-components\";\nimport { InputText } from \"../../components/common/InputText/InputText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authApi } from \"../../api/api\";\nimport { RootStateT } from \"../../App/store/store\";\nimport { Redirect } from \"react-router-dom\";\nimport { routes } from \"../../App/routes/routes\";\nimport { registrationSA } from \"./registrationReducer\";\nimport { MB } from \"../../styles/GlobalStyles\";\nimport { FormTitle } from \"../Login/Login\";\n\nexport type RegistrationFormT = {\n    email: string;\n    password: string | undefined;\n    confirmPassword: string;\n};\n\nexport const Registration = () => {\n    const dispatch = useDispatch();\n    const isRegistered = useSelector<RootStateT, boolean>((state) => state.registration.isRegistered);\n\n    const validate = (values: RegistrationFormT) => {\n        const errors: RegistrationFormT = {} as RegistrationFormT;\n        if (!values.password) {\n            errors.password = \"password required\";\n        } else if (values.password.length < 5) {\n            errors.password = \"Must be more than 5 characters\";\n        } else if (!values.confirmPassword) {\n            errors.confirmPassword = \"confirm your password\";\n        } else if (values.password !== values.confirmPassword) {\n            errors.confirmPassword = \"The password and confirm password fields do not match\";\n        }\n        if (!values.email) {\n            errors.email = \"email required\";\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n        } else if (values.email.length > 50) {\n            errors.email = \"email is too long\";\n        }\n\n        return errors;\n    };\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\"\n        },\n        validate,\n        onSubmit: (values) => {\n            const { email, password } = values;\n            dispatch(registrationSA({ email, password }));\n        }\n    });\n    const inputValidation = (fieldType: \"password\" | \"email\" | \"confirmPassword\"): string => {\n        return formik.touched[fieldType] && formik.errors[fieldType] ? `${formik.errors[fieldType]}` : \"\";\n    };\n\n    if (isRegistered) {\n        return <Redirect to={routes.login} />;\n    }\n\n    return (\n        <>\n            <>\n                <div>\n                    <StyledForm onSubmit={formik.handleSubmit}>\n                        <FormTitle>Sing up</FormTitle>\n\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"email\"}\n                                value={formik.values.email}\n                                id={\"email\"}\n                                name={\"email\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"Email\"}\n                                error={inputValidation(\"email\")}\n                            />\n                        </MB>\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"password\"}\n                                value={formik.values.password}\n                                name={\"password\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"Password\"}\n                                error={inputValidation(\"password\")}\n                            />\n                        </MB>\n                        <MB margin={\"20px\"}>\n                            <InputText\n                                type={\"password\"}\n                                value={formik.values.confirmPassword}\n                                name={\"confirmPassword\"}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                placeholder={\"confirm password\"}\n                                error={inputValidation(\"confirmPassword\")}\n                            />\n                        </MB>\n\n                        {/*{registrationError && <div>{registrationError}</div>}*/}\n                        <Button type={\"submit\"}>Submit</Button>\n                    </StyledForm>\n                </div>\n            </>\n        </>\n    );\n};\n\nconst StyledForm = styled.form`\n    margin: 0 auto;\n    padding: 10px 15px;\n    width: 30%;\n    min-width: 300px;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-flow: column nowrap;\n    background-color: ${({ theme }) => theme.color.secondary.light};\n    box-shadow: ${({ theme }) => theme.shadow[3]};\n`;\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #267fd457;\n    backdrop-filter: blur(5px);\n    z-index: 10;\n\n    & > span {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -100%);\n    }\n`;\n","import React from \"react\";\r\n\r\nexport const NotFound = () => {\r\n    return(\r\n        <h1>Error 404</h1>\r\n    )\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {routes} from \"../../App/routes/routes\";\r\nimport {WorkersTable} from \"../../pages/WorkersTable/WorkersTable\";\r\nimport {Login} from \"../../pages/Login/Login\";\r\nimport {Registration} from \"../../pages/Registration/Registration\";\r\nimport {NotFound} from \"../../pages/NotFound/NotFound\";\r\nimport Toast from 'light-toast';\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route exact path={routes.main} render={() => <WorkersTable />} />\r\n                <Route exact path={routes.login} render={() => <Login />} />\r\n                <Route exact path={routes.registration} render={() => <Registration />} />\r\n                <Route render={() => <NotFound />} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Header } from \"../components/Header/Header\";\nimport { Main } from \"../components/Main/Main\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSA } from \"./appReducer\";\nimport { AppContainer } from \"../styles/GlobalStyles\";\nimport { RootStateT } from \"./store/store\";\nimport { Loader } from \"../components/common/Loader/Loader\";\nimport styled from \"styled-components/macro\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const isAppLoading = useSelector<RootStateT, boolean>((state) => state.app.isAppLoading);\n    const isModalOpen = useSelector<RootStateT, boolean>((state) => state.app.modalStatus.isVisible);\n    useEffect(() => {\n        dispatch(authSA());\n    }, [dispatch]);\n\n    return (\n        <>\n            {isModalOpen && <Overlay />}\n            {isAppLoading ? (\n                <BigLoaderWrap>\n                    <Loader size={250} />\n                </BigLoaderWrap>\n            ) : (\n                <>\n                    <Header />\n                    <AppContainer>\n                        <Main />\n                    </AppContainer>\n                </>\n            )}\n        </>\n    );\n}\n\nconst BigLoaderWrap = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nconst Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(117, 117, 117, 0.7);\n    backdrop-filter: blur(5px);\n    z-index: 200;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { loginReducer, loginWatcher } from \"../../pages/Login/loginReducer\";\nimport { registrationReducer, registrationWatcher } from \"../../pages/Registration/registrationReducer\";\nimport { workersTableReducer, workersWatcher } from \"../../pages/WorkersTable/workersTableReducer\";\nimport { all } from \"redux-saga/effects\";\nimport { appReducer, appWatcher } from \"../appReducer\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nexport type RootStateT = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    registration: registrationReducer,\n    workers: workersTableReducer,\n    app: appReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(rootWatcher);\n\nfunction* rootWatcher() {\n    yield all([loginWatcher(), appWatcher(), registrationWatcher(), workersWatcher()]);\n}\n\n","import { darken, lighten } from \"polished\";\r\n\r\nexport type ThemeType = typeof theme;\r\n\r\nconst primaryColor = '#4579db'\r\nconst secondaryColor = '#dbb145'\r\n\r\nexport const theme = {\r\n    variable: {\r\n        headerHeight: '120px'\r\n    },\r\n    color: {\r\n        primary: {\r\n            main: primaryColor,\r\n            light: `${lighten(0.1, primaryColor)}`,\r\n            dark: `${darken(0.1, primaryColor)}`\r\n        },\r\n        secondary: {\r\n            main: secondaryColor,\r\n            light: `${lighten(0.1, secondaryColor)}`,\r\n            dark: `${darken(0.1, secondaryColor)}`\r\n        },\r\n        grey: {\r\n            100: '#f5f5f5',\r\n            200: '#eeeeee',\r\n            300: '#e0e0e0',\r\n            400: '#bdbdbd',\r\n            500: '#9e9e9e',\r\n            600: '#757575',\r\n            700: '#616161',\r\n            800: '#424242',\r\n            900: '#212121',\r\n        },\r\n        black: '#1a1a1a',\r\n        white: '#e9e9e9',\r\n        error: '#db4545',\r\n        success: '#55e31b',\r\n    },\r\n    font: {\r\n        source: `https://fonts.googleapis.com/css2?family=Montserrat:wght@600&family=Roboto&display=swap`,\r\n        family: {\r\n            default: `'Roboto', sans-serif;`,\r\n            montserrat: `'Montserrat', sans-serif;`\r\n        },\r\n        size: {\r\n            s3: '0.512rem', // 8.19px\r\n            s2: '0.64rem', // 10.24px\r\n            s1: '0.8rem', // 12.80px\r\n            default: '16px', // https://type-scale.com/ - Major third\r\n            b1: '1.25rem', // 20.00px\r\n            b2: '1.563rem', // 25.00px\r\n            b3: '1.953rem', // 31.25px\r\n            b4: '2.441rem', // 39.06px\r\n            b5: '3.052rem' // 48.83px\r\n        }\r\n    },\r\n    shadow: {\r\n        0: 'none',\r\n        1: '2px 2px 5px rgba(0,0,0,0.2)',\r\n        2: '2px 2px 6px rgba(0,0,0,0.2)',\r\n        3: '2px 2px 7px rgba(0,0,0,0.2)',\r\n        4: '3px 3px 8px rgba(0,0,0,0.5)',\r\n    },\r\n    effect: {\r\n        glow: `drop-shadow(0px 0px 5px ${primaryColor})`\r\n    },\r\n    mediaQuery: {\r\n        mobileS: '320px',\r\n        mobileM: '375px',\r\n        mobileL: '425px',\r\n        tablet: '768px',\r\n        laptop: '1024px',\r\n        laptopL: '1440px',\r\n        fourK: '2560px',\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {store} from \"./App/store/store\";\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport {theme} from \"./styles/theme\";\nimport { GlobalStyles } from './styles/GlobalStyles';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n            <GlobalStyles />\n            <HashRouter>\n                <App/>\n            </HashRouter>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}